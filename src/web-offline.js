if("undefined"==typeof Nimiq)var Nimiq="undefined"!=typeof window?window:{};var Proxy;!function(e){(Nimiq=e="undefined"!=typeof e?e:{})._currentScript||(Nimiq._currentScript=document.currentScript);if(!Nimiq._currentScript){const e=document.getElementsByTagName("script");Nimiq._currentScript=e[e.length-1]}Nimiq._path||(Nimiq._currentScript&&-1!==Nimiq._currentScript.src.indexOf("/")?Nimiq._path=Nimiq._currentScript.src.substring(0,Nimiq._currentScript.src.lastIndexOf("/")+1):Nimiq._path="./");class Class{static get scope(){return"undefined"!=typeof e?e:"undefined"!=typeof self?self:window}static register(t){"undefined"!=typeof e&&(e[t.name]=t)}}Class.register(Class);class LogNative{constructor(){this._global_level=Log.INFO;this._tag_levels={};try{if(window.localStorage)try{let t=window.localStorage.getItem("log_tag_levels");t&&"string"==typeof t&&(t=JSON.parse(t));t&&"object"==typeof t&&(this._tag_levels=t)}catch(e){console.warn("Failed to load log configuration from local storage.")}}catch(e){}}isLoggable(e,t){return e&&this._tag_levels[e]?this._tag_levels[e]<=t:this._tag_levels["*"]?this._tag_levels["*"]<=t:this._global_level<=t}setLoggable(e,t){e&&e.name&&(e=e.name);this._tag_levels[e]=t;window.localStorage&&window.localStorage.setItem("log_tag_levels",JSON.stringify(this._tag_levels))}msg(e,t,r){t&&t.name&&(t=t.name);if(this.isLoggable(t,e)){t&&r.unshift(t+":");r.unshift(`[${Log.Level.toStringTag(e)} ${(new Date).toTimeString().substr(0,8)}]`);console.error&&e>=Log.ERROR?console.error.apply(console,r):console.warn&&e>=Log.WARNING?console.warn.apply(console,r):console.info&&e>=Log.INFO?console.info.apply(console,r):console.debug&&e>=Log.DEBUG?console.debug.apply(console,r):console.trace&&e<=Log.TRACE?console.trace.apply(console,r):console.log.apply(console,r)}}}Class.register(LogNative);class Log{static get instance(){Log._instance||(Log._instance=new Log(new LogNative));return Log._instance}constructor(e){this._native=e}setLoggable(e,t){this._native.setLoggable(e,Log.Level.get(t))}get level(){return this._native._global_level}set level(e){this._native._global_level=Log.Level.get(e)}msg(e,t,r){if(this._native.isLoggable(t,e)){for(let e=0;e<r.length;++e){"function"==typeof r[e]&&(r[e]=r[e]());"object"==typeof r[e]&&("function"==typeof r[e].toString?r[e]=r[e].toString():r[e].constructor&&r[e].constructor.name?r[e]=`{Object: ${r[e].constructor.name}}`:r[e]="{Object}")}this._native.msg(e,t,r)}}static d(e,t,...r){if(arguments.length>=2){e=arguments[0];r=Array.prototype.slice.call(arguments,1)}else{e=undefined;r=Array.prototype.slice.call(arguments,0)}Log.instance.msg(Log.DEBUG,e,r)}static e(e,t,...r){if(arguments.length>=2){e=arguments[0];r=Array.prototype.slice.call(arguments,1)}else{e=undefined;r=Array.prototype.slice.call(arguments,0)}Log.instance.msg(Log.ERROR,e,r)}static i(e,t,...r){if(arguments.length>=2){e=arguments[0];r=Array.prototype.slice.call(arguments,1)}else{e=undefined;r=Array.prototype.slice.call(arguments,0)}Log.instance.msg(Log.INFO,e,r)}static v(e,t,...r){if(arguments.length>=2){e=arguments[0];r=Array.prototype.slice.call(arguments,1)}else{e=undefined;r=Array.prototype.slice.call(arguments,0)}Log.instance.msg(Log.VERBOSE,e,r)}static w(e,t,...r){if(arguments.length>=2){e=arguments[0];r=Array.prototype.slice.call(arguments,1)}else{e=undefined;r=Array.prototype.slice.call(arguments,0)}Log.instance.msg(Log.WARNING,e,r)}static t(e,t,...r){if(arguments.length>=2){e=arguments[0];r=Array.prototype.slice.call(arguments,1)}else{e=undefined;r=Array.prototype.slice.call(arguments,0)}Log.instance.msg(Log.TRACE,e,r)}}Log.Level={TRACE:1,VERBOSE:2,DEBUG:3,INFO:4,WARNING:5,ERROR:6,ASSERT:7,toStringTag:function(e){switch(e){case Log.Level.TRACE:return"T";case Log.Level.VERBOSE:return"V";case Log.Level.DEBUG:return"D";case Log.Level.INFO:return"I";case Log.Level.WARNING:return"W";case Log.Level.ERROR:return"E";case Log.Level.ASSERT:return"A";default:return"*"}},toString:function(e){switch(e){case Log.Level.TRACE:return"trace";case Log.Level.VERBOSE:return"verbose";case Log.Level.DEBUG:return"debug";case Log.Level.INFO:return"info";case Log.Level.WARNING:return"warn";case Log.Level.ERROR:return"error";case Log.Level.ASSERT:return"assert";default:return"unknown"}},get:function(e){if("number"==typeof e)return e;if(!isNaN(parseInt(e)))return parseInt(e);switch(e.toLowerCase()){case"t":case"trace":return Log.Level.TRACE;case"v":case"verbose":return Log.Level.VERBOSE;case"d":case"debug":return Log.Level.DEBUG;case"i":case"info":return Log.Level.INFO;case"w":case"warn":case"warning":return Log.Level.WARNING;case"e":case"error":case"exception":return Log.Level.ERROR;case"a":case"assert":case"assertion":return Log.Level.ASSERT}return 0}};Log.TRACE=Log.Level.TRACE;Log.VERBOSE=Log.Level.VERBOSE;Log.DEBUG=Log.Level.DEBUG;Log.INFO=Log.Level.INFO;Log.WARNING=Log.Level.WARNING;Log.ERROR=Log.Level.ERROR;Log.ASSERT=Log.Level.ASSERT;Log._instance=null;Log.d.tag=(e=>Log.d.bind(null,e));Log.e.tag=(e=>Log.e.bind(null,e));Log.i.tag=(e=>Log.i.bind(null,e));Log.v.tag=(e=>Log.v.bind(null,e));Log.w.tag=(e=>Log.w.bind(null,e));Log.t.tag=(e=>Log.t.bind(null,e));Class.register(Log);class Observable{static get WILDCARD(){return"*"}constructor(){this._listeners=new Map}_offAll(){this._listeners.clear()}on(e,t){if(this._listeners.has(e))return this._listeners.get(e).push(t)-1;this._listeners.set(e,[t]);return 0}off(e,t){this._listeners.has(e)&&this._listeners.get(e)[t]&&delete this._listeners.get(e)[t]}fire(e,...t){const r=[];if(this._listeners.has(e)){const i=this._listeners.get(e);for(const e in i){if(isNaN(e))continue;const n=i[e].apply(null,t);n instanceof Promise&&r.push(n)}}if(this._listeners.has(Observable.WILDCARD)){const e=this._listeners.get(Observable.WILDCARD);for(const t in e){if(isNaN(t))continue;const i=e[t].apply(null,arguments);i instanceof Promise&&r.push(i)}}return r.length>0?Promise.all(r):null}bubble(e,...t){for(const r of t){let t;t=r===Observable.WILDCARD?function(){this.fire.apply(this,arguments)}:function(){this.fire.apply(this,[r,...arguments])};e.on(r,t.bind(this))}}}Class.register(Observable);class CryptoLib{static get instance(){if(!CryptoLib._instance){const e={};e.getRandomValues=(window.crypto||window.msCrypto).getRandomValues.bind(window.crypto);CryptoLib._instance=e}return CryptoLib._instance}}CryptoLib._instance=null;Class.register(CryptoLib);class ArrayUtils{static randomElement(e){return e[Math.floor(Math.random()*e.length)]}static subarray(e,t,r){function clamp(e,t,r){return e<t?t:e>r?r:e}t===undefined&&(t=0);r===undefined&&(r=e.byteLength);t=clamp(t,0,e.byteLength);let i=(r=clamp(r,0,e.byteLength))-t;i<0&&(i=0);return new Uint8Array(e.buffer,e.byteOffset+t,i)}static*k_combinations(e,t){const r=e.length;if(t>r)return;const i=Array.from(new Array(t),(e,t)=>t);yield i.map(t=>e[t]);const n=Array.from(new Array(t),(e,r)=>t-r-1);for(;;){let s=t-1,a=!1;for(s of n)if(i[s]!==s+r-t){a=!0;break}if(!a)return;i[s]+=1;for(const e of Array.from(new Array(t-s-1),(e,t)=>s+t+1))i[e]=i[e-1]+1;yield i.map(t=>e[t])}}}Class.register(ArrayUtils);class Assert{static that(e,t="Assertion failed"){if(!e)throw new Error(t)}}Class.register(Assert);class BufferUtils{static toAscii(e){return String.fromCharCode.apply(null,new Uint8Array(e))}static fromAscii(e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t[r]=e.charCodeAt(r);return t}static _codePointTextDecoder(e){if("undefined"==typeof TextDecoder)throw new Error("TextDecoder not supported");if(null===BufferUtils._ISO_8859_15_DECODER)throw new Error("TextDecoder does not supprot iso-8859-15");if(BufferUtils._ISO_8859_15_DECODER===undefined)try{BufferUtils._ISO_8859_15_DECODER=new TextDecoder("iso-8859-15")}finally{BufferUtils._ISO_8859_15_DECODER=null}return BufferUtils._ISO_8859_15_DECODER.decode(e).replace("€","¤").replace("Š","¦").replace("š","¨").replace("Ž","´").replace("ž","¸").replace("Œ","¼").replace("œ","½").replace("Ÿ","¾")}static _tripletToBase64(e){return BufferUtils._BASE64_LOOKUP[e>>18&63]+BufferUtils._BASE64_LOOKUP[e>>12&63]+BufferUtils._BASE64_LOOKUP[e>>6&63]+BufferUtils._BASE64_LOOKUP[63&e]}static _base64encodeChunk(e,t,r){let i;const n=[];for(let s=t;s<r;s+=3){i=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]);n.push(BufferUtils._tripletToBase64(i))}return n.join("")}static _base64fromByteArray(e){let t;const r=e.length,i=r%3;let n="";const s=[];for(let a=0,o=r-i;a<o;a+=16383)s.push(BufferUtils._base64encodeChunk(e,a,a+16383>o?o:a+16383));if(1===i){t=e[r-1];n+=BufferUtils._BASE64_LOOKUP[t>>2];n+=BufferUtils._BASE64_LOOKUP[t<<4&63];n+="=="}else if(2===i){t=(e[r-2]<<8)+e[r-1];n+=BufferUtils._BASE64_LOOKUP[t>>10];n+=BufferUtils._BASE64_LOOKUP[t>>4&63];n+=BufferUtils._BASE64_LOOKUP[t<<2&63];n+="="}s.push(n);return s.join("")}static toBase64(e){if(PlatformUtils.isNodeJs())return Buffer.from(e).toString("base64");if("undefined"!=typeof TextDecoder&&null!==BufferUtils._ISO_8859_15_DECODER)try{return btoa(BufferUtils._codePointTextDecoder(new Uint8Array(e)))}catch(t){}return BufferUtils._base64fromByteArray(new Uint8Array(e))}static fromBase64(e){return new SerialBuffer(Uint8Array.from(atob(e),e=>e.charCodeAt(0)))}static toBase64Url(e){return BufferUtils.toBase64(e).replace(/\//g,"_").replace(/\+/g,"-").replace(/=/g,".")}static fromBase64Url(e){return new SerialBuffer(Uint8Array.from(atob(e.replace(/_/g,"/").replace(/-/g,"+").replace(/\./g,"=")),e=>e.charCodeAt(0)))}static toBase32(e,t=BufferUtils.BASE32_ALPHABET.NIMIQ){let r,i,n,s=3,a=0,o="";for(n=0;n<e.length;n++){o+=t[31&(i=a|(r=e[n])>>s)];s>5&&(o+=t[31&(i=r>>(s-=5))]);a=r<<(s=5-s);s=8-s}3!==s&&(o+=t[31&a]);for(;o.length%8!=0&&33===t.length;)o+=t[32];return o}static fromBase32(e,t=BufferUtils.BASE32_ALPHABET.NIMIQ){const r=[];t.toUpperCase().split("").forEach((e,t)=>{e in r||(r[e]=t)});let i,n=8,s=0,a=[];e.toUpperCase().split("").forEach(e=>{if(33!==t.length||e!==t[32]){i=255&r[e];if((n-=5)>0)s|=i<<n;else if(n<0){a.push(s|i>>-n);s=i<<(n+=8)&255}else{a.push(s|i);n=8;s=0}}});8!==n&&0!==s&&a.push(s);return new Uint8Array(a)}static toHex(e){let t="";for(let r=0;r<e.length;r++){const i=e[r];t+=BufferUtils.HEX_ALPHABET[i>>>4];t+=BufferUtils.HEX_ALPHABET[15&i]}return t}static fromHex(e){e=e.trim();return StringUtils.isHexBytes(e)?new SerialBuffer(Uint8Array.from(e.match(/.{2}/g)||[],e=>parseInt(e,16))):null}static toBinary(e){let t="";for(let r=0;r<e.length;r++){const i=e[r];t+=StringUtils.lpad(i.toString(2),"0",8)}return t}static concatTypedArrays(e,t){const r=new e.constructor(e.length+t.length);r.set(e,0);r.set(t,e.length);return r}static equals(e,t){if(e.length!==t.length)return!1;const r=new Uint8Array(e),i=new Uint8Array(t);for(let n=0;n<e.length;n++)if(r[n]!==i[n])return!1;return!0}static compare(e,t){if(e.length<t.length)return-1;if(e.length>t.length)return 1;for(let r=0;r<e.length;r++){if(e[r]<t[r])return-1;if(e[r]>t[r])return 1}return 0}static xor(e,t){const r=new Uint8Array(e.byteLength);for(let i=0;i<e.byteLength;++i)r[i]=e[i]^t[i];return r}}BufferUtils.BASE64_ALPHABET="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";BufferUtils.BASE32_ALPHABET={RFC4648:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",RFC4648_HEX:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",NIMIQ:"0123456789ABCDEFGHJKLMNPQRSTUVXY"};BufferUtils.HEX_ALPHABET="0123456789abcdef";BufferUtils._BASE64_LOOKUP=[];for(let t=0,r=BufferUtils.BASE64_ALPHABET.length;t<r;++t)BufferUtils._BASE64_LOOKUP[t]=BufferUtils.BASE64_ALPHABET[t];Class.register(BufferUtils);class SerialBuffer extends Uint8Array{constructor(e){super(e);this._view=new DataView(this.buffer);this._readPos=0;this._writePos=0}subarray(e,t){return ArrayUtils.subarray(this,e,t)}get readPos(){return this._readPos}set readPos(e){if(e<0||e>this.byteLength)throw`Invalid readPos ${e}`;this._readPos=e}get writePos(){return this._writePos}set writePos(e){if(e<0||e>this.byteLength)throw`Invalid writePos ${e}`;this._writePos=e}reset(){this._readPos=0;this._writePos=0}read(e){const t=this.subarray(this._readPos,this._readPos+e);this._readPos+=e;return new Uint8Array(t)}write(e){this.set(e,this._writePos);this._writePos+=e.byteLength}readUint8(){return this._view.getUint8(this._readPos++)}writeUint8(e){this._view.setUint8(this._writePos++,e)}readUint16(){const e=this._view.getUint16(this._readPos);this._readPos+=2;return e}writeUint16(e){this._view.setUint16(this._writePos,e);this._writePos+=2}readUint32(){const e=this._view.getUint32(this._readPos);this._readPos+=4;return e}writeUint32(e){this._view.setUint32(this._writePos,e);this._writePos+=4}readUint64(){const e=this._view.getUint32(this._readPos)*Math.pow(2,32)+this._view.getUint32(this._readPos+4);if(!NumberUtils.isUint64(e))throw new Error("Malformed value");this._readPos+=8;return e}writeUint64(e){if(!NumberUtils.isUint64(e))throw new Error("Malformed value");this._view.setUint32(this._writePos,Math.floor(e/Math.pow(2,32)));this._view.setUint32(this._writePos+4,e);this._writePos+=8}readVarUint(){const e=this.readUint8();return e<253?e:253===e?this.readUint16():254===e?this.readUint32():this.readUint64()}writeVarUint(e){if(!NumberUtils.isUint64(e))throw new Error("Malformed value");if(e<253)this.writeUint8(e);else if(e<=65535){this.writeUint8(253);this.writeUint16(e)}else if(e<=4294967295){this.writeUint8(254);this.writeUint32(e)}else{this.writeUint8(255);this.writeUint64(e)}}static varUintSize(e){if(!NumberUtils.isUint64(e))throw new Error("Malformed value");return e<253?1:e<=65535?3:e<=4294967295?5:9}readFloat64(){const e=this._view.getFloat64(this._readPos);this._readPos+=8;return e}writeFloat64(e){this._view.setFloat64(this._writePos,e);this._writePos+=8}readString(e){const t=this.read(e);return BufferUtils.toAscii(t)}writeString(e,t){if(StringUtils.isMultibyte(e)||e.length!==t)throw"Malformed value/length";const r=BufferUtils.fromAscii(e);this.write(r)}readPaddedString(e){const t=this.read(e);let r=0;for(;r<e&&0!==t[r];)r++;const i=new Uint8Array(t.buffer,t.byteOffset,r);return BufferUtils.toAscii(i)}writePaddedString(e,t){if(StringUtils.isMultibyte(e)||e.length>t)throw"Malformed value/length";const r=BufferUtils.fromAscii(e);this.write(r);const i=t-r.byteLength;this.write(new Uint8Array(i))}readVarLengthString(){const e=this.readUint8();if(this._readPos+e>this.length)throw"Malformed length";const t=this.read(e);return BufferUtils.toAscii(t)}writeVarLengthString(e){if(StringUtils.isMultibyte(e)||!NumberUtils.isUint8(e.length))throw new Error("Malformed value");const t=BufferUtils.fromAscii(e);this.writeUint8(t.byteLength);this.write(t)}static varLengthStringSize(e){if(StringUtils.isMultibyte(e)||!NumberUtils.isUint8(e.length))throw new Error("Malformed value");return 1+e.length}}Class.register(SerialBuffer);class CRC8{static _createTable(){const e=[];for(let t=0;t<256;++t){let r=t;for(let e=0;e<8;++e)r=0!=(128&r)?(r<<1^151)%256:(r<<1)%256;e[t]=r}return e}static compute(e){CRC8._table||(CRC8._table=CRC8._createTable());let t=0;for(let r=0;r<e.length;r++)t=CRC8._table[(t^e[r])%256];return t}}CRC8._table=null;Class.register(CRC8);!function(e){"use strict";var t,r=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,i=Math.ceil,n=Math.floor,s="[BigNumber Error] ",a=s+"Number primitive has more than 15 significant digits: ",o=1e14,l=14,c=9007199254740991,u=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],h=1e7,d=1e9;function bitFloor(e){var t=0|e;return e>0||e===t?t:t-1}function coeffToString(e){for(var t,r,i=1,n=e.length,s=e[0]+"";i<n;){t=e[i++]+"";r=l-t.length;for(;r--;t="0"+t);s+=t}for(n=s.length;48===s.charCodeAt(--n););return s.slice(0,n+1||1)}function compare(e,t){var r,i,n=e.c,s=t.c,a=e.s,o=t.s,l=e.e,c=t.e;if(!a||!o)return null;r=n&&!n[0];i=s&&!s[0];if(r||i)return r?i?0:-o:a;if(a!=o)return a;r=a<0;i=l==c;if(!n||!s)return i?0:!n^r?1:-1;if(!i)return l>c^r?1:-1;o=(l=n.length)<(c=s.length)?l:c;for(a=0;a<o;a++)if(n[a]!=s[a])return n[a]>s[a]^r?1:-1;return l==c?0:l>c^r?1:-1}function intCheck(e,t,r,a){if(e<t||e>r||e!==(e<0?i(e):n(e)))throw Error(s+(a||"Argument")+("number"==typeof e?e<t||e>r?" out of range: ":" not an integer: ":" not a primitive number: ")+e)}function isArray(e){return"[object Array]"==Object.prototype.toString.call(e)}function isOdd(e){var t=e.c.length-1;return bitFloor(e.e/l)==t&&e.c[t]%2!=0}function toExponential(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function toFixedPoint(e,t,r){var i,n;if(t<0){for(n=r+".";++t;n+=r);e=n+e}else if(++t>(i=e.length)){for(n=r,t-=i;--t;n+=r);e+=n}else t<i&&(e=e.slice(0,t)+"."+e.slice(t));return e}(t=function clone(e){var t,f,g,m,p,y,w,_,b,S=BigNumber.prototype={constructor:BigNumber,toString:null,valueOf:null},A=new BigNumber(1),E=20,v=4,U=-7,P=21,k=-1e7,I=1e7,N=!1,C=1,B=0,M={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},L="0123456789abcdefghijklmnopqrstuvwxyz";function BigNumber(e,t){var i,s,o,u,h,d,m,p=this;if(!(p instanceof BigNumber))return new BigNumber(e,t);if(null==t){if(e instanceof BigNumber){p.s=e.s;p.e=e.e;p.c=(e=e.c)?e.slice():e;return}if((h="number"==typeof e)&&0*e==0){p.s=1/e<0?(e=-e,-1):1;if(e===~~e){for(o=0,u=e;u>=10;u/=10,o++);p.e=o;p.c=[e];return}m=e+""}else{if(!r.test(m=e+""))return g(p,m,h);p.s=45==m.charCodeAt(0)?(m=m.slice(1),-1):1}}else{intCheck(t,2,L.length,"Base");m=e+"";if(10==t)return round(p=new BigNumber(e instanceof BigNumber?e:m),E+p.e+1,v);if(h="number"==typeof e){if(0*e!=0)return g(p,m,h,t);p.s=1/e<0?(m=m.slice(1),-1):1;if(BigNumber.DEBUG&&m.replace(/^0\.0*|\./,"").length>15)throw Error(a+e);h=!1}else{p.s=45===m.charCodeAt(0)?(m=m.slice(1),-1):1;t>10&&t<37&&(m=m.toLowerCase())}i=L.slice(0,t);o=u=0;for(d=m.length;u<d;u++)if(i.indexOf(s=m.charAt(u))<0){if("."==s&&u>o){o=d;continue}return g(p,e+"",h,t)}m=f(m,t,10,p.s)}(o=m.indexOf("."))>-1&&(m=m.replace(".",""));if((u=m.search(/e/i))>0){o<0&&(o=u);o+=+m.slice(u+1);m=m.substring(0,u)}else o<0&&(o=m.length);for(u=0;48===m.charCodeAt(u);u++);for(d=m.length;48===m.charCodeAt(--d););if(m=m.slice(u,++d)){d-=u;if(h&&BigNumber.DEBUG&&d>15&&(e>c||e!==n(e)))throw Error(a+p.s*e);if((o=o-u-1)>I)p.c=p.e=null;else if(o<k)p.c=[p.e=0];else{p.e=o;p.c=[];u=(o+1)%l;o<0&&(u+=l);if(u<d){u&&p.c.push(+m.slice(0,u));for(d-=l;u<d;)p.c.push(+m.slice(u,u+=l));m=m.slice(u);u=l-m.length}else u-=d;for(;u--;m+="0");p.c.push(+m)}}else p.c=[p.e=0]}BigNumber.clone=clone;BigNumber.ROUND_UP=0;BigNumber.ROUND_DOWN=1;BigNumber.ROUND_CEIL=2;BigNumber.ROUND_FLOOR=3;BigNumber.ROUND_HALF_UP=4;BigNumber.ROUND_HALF_DOWN=5;BigNumber.ROUND_HALF_EVEN=6;BigNumber.ROUND_HALF_CEIL=7;BigNumber.ROUND_HALF_FLOOR=8;BigNumber.EUCLID=9;BigNumber.config=BigNumber.set=function(e){var t,r;if(null!=e){if("object"!=typeof e)throw Error(s+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")){intCheck(r=e[t],0,d,t);E=r}if(e.hasOwnProperty(t="ROUNDING_MODE")){intCheck(r=e[t],0,8,t);v=r}if(e.hasOwnProperty(t="EXPONENTIAL_AT"))if(isArray(r=e[t])){intCheck(r[0],-d,0,t);intCheck(r[1],0,d,t);U=r[0];P=r[1]}else{intCheck(r,-d,d,t);U=-(P=r<0?-r:r)}if(e.hasOwnProperty(t="RANGE"))if(isArray(r=e[t])){intCheck(r[0],-d,-1,t);intCheck(r[1],1,d,t);k=r[0];I=r[1]}else{intCheck(r,-d,d,t);if(!r)throw Error(s+t+" cannot be zero: "+r);k=-(I=r<0?-r:r)}if(e.hasOwnProperty(t="CRYPTO")){if((r=e[t])!==!!r)throw Error(s+t+" not true or false: "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes){N=!r;throw Error(s+"crypto unavailable")}N=r}else N=r}if(e.hasOwnProperty(t="MODULO_MODE")){intCheck(r=e[t],0,9,t);C=r}if(e.hasOwnProperty(t="POW_PRECISION")){intCheck(r=e[t],0,d,t);B=r}if(e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(r=e[t]))throw Error(s+t+" not an object: "+r);M=r}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(r=e[t])||/^.$|\.|(.).*\1/.test(r))throw Error(s+t+" invalid: "+r);L=r}}return{DECIMAL_PLACES:E,ROUNDING_MODE:v,EXPONENTIAL_AT:[U,P],RANGE:[k,I],CRYPTO:N,MODULO_MODE:C,POW_PRECISION:B,FORMAT:M,ALPHABET:L}};BigNumber.isBigNumber=function(e){return e instanceof BigNumber||e&&!0===e._isBigNumber||!1};BigNumber.maximum=BigNumber.max=function(){return maxOrMin(arguments,S.lt)};BigNumber.minimum=BigNumber.min=function(){return maxOrMin(arguments,S.gt)};BigNumber.random=(m=9007199254740992*Math.random()&2097151?function(){return n(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,a,o,c,h=0,f=[],g=new BigNumber(A);null==e?e=E:intCheck(e,0,d);o=i(e/l);if(N)if(crypto.getRandomValues){t=crypto.getRandomValues(new Uint32Array(o*=2));for(;h<o;)if((c=131072*t[h]+(t[h+1]>>>11))>=9e15){r=crypto.getRandomValues(new Uint32Array(2));t[h]=r[0];t[h+1]=r[1]}else{f.push(c%1e14);h+=2}h=o/2}else{if(!crypto.randomBytes){N=!1;throw Error(s+"crypto unavailable")}t=crypto.randomBytes(o*=7);for(;h<o;)if((c=281474976710656*(31&t[h])+1099511627776*t[h+1]+4294967296*t[h+2]+16777216*t[h+3]+(t[h+4]<<16)+(t[h+5]<<8)+t[h+6])>=9e15)crypto.randomBytes(7).copy(t,h);else{f.push(c%1e14);h+=7}h=o/7}if(!N)for(;h<o;)(c=m())<9e15&&(f[h++]=c%1e14);o=f[--h];e%=l;if(o&&e){c=u[l-e];f[h]=n(o/c)*c}for(;0===f[h];f.pop(),h--);if(h<0)f=[a=0];else{for(a=-1;0===f[0];f.splice(0,1),a-=l);for(h=1,c=f[0];c>=10;c/=10,h++);h<l&&(a-=l-h)}g.e=a;g.c=f;return g});f=function(){function toBaseOut(e,t,r,i){for(var n,s,a=[0],o=0,l=e.length;o<l;){for(s=a.length;s--;a[s]*=t);a[0]+=i.indexOf(e.charAt(o++));for(n=0;n<a.length;n++)if(a[n]>r-1){null==a[n+1]&&(a[n+1]=0);a[n+1]+=a[n]/r|0;a[n]%=r}}return a.reverse()}return function(e,r,i,n,s){var a,o,l,c,u,h,d,f,g=e.indexOf("."),m=E,p=v;if(g>=0){c=B;B=0;e=e.replace(".","");h=(f=new BigNumber(r)).pow(e.length-g);B=c;f.c=toBaseOut(toFixedPoint(coeffToString(h.c),h.e,"0"),10,i,"0123456789");f.e=f.c.length}l=c=(d=toBaseOut(e,r,i,s?(a=L,"0123456789"):(a="0123456789",L))).length;for(;0==d[--c];d.pop());if(!d[0])return a.charAt(0);if(g<0)--l;else{h.c=d;h.e=l;h.s=n;d=(h=t(h,f,m,p,i)).c;u=h.r;l=h.e}g=d[o=l+m+1];c=i/2;u=u||o<0||null!=d[o+1];u=p<4?(null!=g||u)&&(0==p||p==(h.s<0?3:2)):g>c||g==c&&(4==p||u||6==p&&1&d[o-1]||p==(h.s<0?8:7));if(o<1||!d[0])e=u?toFixedPoint(a.charAt(1),-m,a.charAt(0)):a.charAt(0);else{d.length=o;if(u)for(--i;++d[--o]>i;){d[o]=0;if(!o){++l;d=[1].concat(d)}}for(c=d.length;!d[--c];);for(g=0,e="";g<=c;e+=a.charAt(d[g++]));e=toFixedPoint(e,l,a.charAt(0))}return e}}();t=function(){function multiply(e,t,r){var i,n,s,a,o=0,l=e.length,c=t%h,u=t/h|0;for(e=e.slice();l--;){o=((n=c*(s=e[l]%h)+(i=u*s+(a=e[l]/h|0)*c)%h*h+o)/r|0)+(i/h|0)+u*a;e[l]=n%r}o&&(e=[o].concat(e));return e}function compare(e,t,r,i){var n,s;if(r!=i)s=r>i?1:-1;else for(n=s=0;n<r;n++)if(e[n]!=t[n]){s=e[n]>t[n]?1:-1;break}return s}function subtract(e,t,r,i){for(var n=0;r--;){e[r]-=n;n=e[r]<t[r]?1:0;e[r]=n*i+e[r]-t[r]}for(;!e[0]&&e.length>1;e.splice(0,1));}return function(e,t,r,i,s){var a,c,u,h,d,f,g,m,p,y,w,_,b,S,A,E,v,U=e.s==t.s?1:-1,P=e.c,k=t.c;if(!(P&&P[0]&&k&&k[0]))return new BigNumber(e.s&&t.s&&(P?!k||P[0]!=k[0]:k)?P&&0==P[0]||!k?0*U:U/0:NaN);p=(m=new BigNumber(U)).c=[];U=r+(c=e.e-t.e)+1;if(!s){s=o;c=bitFloor(e.e/l)-bitFloor(t.e/l);U=U/l|0}for(u=0;k[u]==(P[u]||0);u++);k[u]>(P[u]||0)&&c--;if(U<0){p.push(1);h=!0}else{S=P.length;E=k.length;u=0;U+=2;if((d=n(s/(k[0]+1)))>1){k=multiply(k,d,s);P=multiply(P,d,s);E=k.length;S=P.length}b=E;w=(y=P.slice(0,E)).length;for(;w<E;y[w++]=0);v=k.slice();v=[0].concat(v);A=k[0];k[1]>=s/2&&A++;do{d=0;if((a=compare(k,y,E,w))<0){_=y[0];E!=w&&(_=_*s+(y[1]||0));if((d=n(_/A))>1){d>=s&&(d=s-1);g=(f=multiply(k,d,s)).length;w=y.length;for(;1==compare(f,y,g,w);){d--;subtract(f,E<g?v:k,g,s);g=f.length;a=1}}else{0==d&&(a=d=1);g=(f=k.slice()).length}g<w&&(f=[0].concat(f));subtract(y,f,w,s);w=y.length;if(-1==a)for(;compare(k,y,E,w)<1;){d++;subtract(y,E<w?v:k,w,s);w=y.length}}else if(0===a){d++;y=[0]}p[u++]=d;if(y[0])y[w++]=P[b]||0;else{y=[P[b]];w=1}}while((b++<S||null!=y[0])&&U--);h=null!=y[0];p[0]||p.splice(0,1)}if(s==o){for(u=1,U=p[0];U>=10;U/=10,u++);round(m,r+(m.e=u+c*l-1)+1,i,h)}else{m.e=c;m.r=+h}return m}}();function format(e,t,r,i){var n,s,a,o,l;null==r?r=v:intCheck(r,0,8);if(!e.c)return e.toString();n=e.c[0];a=e.e;if(null==t){l=coeffToString(e.c);l=1==i||2==i&&a<=U?toExponential(l,a):toFixedPoint(l,a,"0")}else{s=(e=round(new BigNumber(e),t,r)).e;o=(l=coeffToString(e.c)).length;if(1==i||2==i&&(t<=s||s<=U)){for(;o<t;l+="0",o++);l=toExponential(l,s)}else{t-=a;l=toFixedPoint(l,s,"0");if(s+1>o){if(--t>0)for(l+=".";t--;l+="0");}else if((t+=s-o)>0){s+1==o&&(l+=".");for(;t--;l+="0");}}}return e.s<0&&n?"-"+l:l}function maxOrMin(e,t){var r,i,n=0;isArray(e[0])&&(e=e[0]);r=new BigNumber(e[0]);for(;++n<e.length;){if(!(i=new BigNumber(e[n])).s){r=i;break}t.call(r,i)&&(r=i)}return r}function normalise(e,t,r){for(var i=1,n=t.length;!t[--n];t.pop());for(n=t[0];n>=10;n/=10,i++);if((r=i+r*l-1)>I)e.c=e.e=null;else if(r<k)e.c=[e.e=0];else{e.e=r;e.c=t}return e}g=(p=/^(-?)0([xbo])(?=\w[\w.]*$)/i,y=/^([^.]+)\.$/,w=/^\.([^.]+)$/,_=/^-?(Infinity|NaN)$/,b=/^\s*\+(?=[\w.])|^\s+|\s+$/g,function(e,t,r,i){var n,a=r?t:t.replace(b,"");if(_.test(a)){e.s=isNaN(a)?null:a<0?-1:1;e.c=e.e=null}else{if(!r){a=a.replace(p,function(e,t,r){n="x"==(r=r.toLowerCase())?16:"b"==r?2:8;return i&&i!=n?e:t});if(i){n=i;a=a.replace(y,"$1").replace(w,"0.$1")}if(t!=a)return new BigNumber(a,n)}if(BigNumber.DEBUG)throw Error(s+"Not a"+(i?" base "+i:"")+" number: "+t);e.c=e.e=e.s=null}});function round(e,t,r,s){var a,c,h,d,f,g,m,p=e.c,y=u;if(p){e:{for(a=1,d=p[0];d>=10;d/=10,a++);if((c=t-a)<0){c+=l;h=t;m=(f=p[g=0])/y[a-h-1]%10|0}else if((g=i((c+1)/l))>=p.length){if(!s)break e;for(;p.length<=g;p.push(0));f=m=0;a=1;h=(c%=l)-l+1}else{f=d=p[g];for(a=1;d>=10;d/=10,a++);m=(h=(c%=l)-l+a)<0?0:f/y[a-h-1]%10|0}s=s||t<0||null!=p[g+1]||(h<0?f:f%y[a-h-1]);s=r<4?(m||s)&&(0==r||r==(e.s<0?3:2)):m>5||5==m&&(4==r||s||6==r&&(c>0?h>0?f/y[a-h]:0:p[g-1])%10&1||r==(e.s<0?8:7));if(t<1||!p[0]){p.length=0;if(s){t-=e.e+1;p[0]=y[(l-t%l)%l];e.e=-t||0}else p[0]=e.e=0;return e}if(0==c){p.length=g;d=1;g--}else{p.length=g+1;d=y[l-c];p[g]=h>0?n(f/y[a-h]%y[h])*d:0}if(s)for(;;){if(0==g){for(c=1,h=p[0];h>=10;h/=10,c++);h=p[0]+=d;for(d=1;h>=10;h/=10,d++);if(c!=d){e.e++;p[0]==o&&(p[0]=1)}break}p[g]+=d;if(p[g]!=o)break;p[g--]=0;d=1}for(c=p.length;0===p[--c];p.pop());}e.e>I?e.c=e.e=null:e.e<k&&(e.c=[e.e=0])}return e}S.absoluteValue=S.abs=function(){var e=new BigNumber(this);e.s<0&&(e.s=1);return e};S.comparedTo=function(e,t){return compare(this,new BigNumber(e,t))};S.decimalPlaces=S.dp=function(e,t){var r,i,n,s=this;if(null!=e){intCheck(e,0,d);null==t?t=v:intCheck(t,0,8);return round(new BigNumber(s),e+s.e+1,t)}if(!(r=s.c))return null;i=((n=r.length-1)-bitFloor(this.e/l))*l;if(n=r[n])for(;n%10==0;n/=10,i--);i<0&&(i=0);return i};S.dividedBy=S.div=function(e,r){return t(this,new BigNumber(e,r),E,v)};S.dividedToIntegerBy=S.idiv=function(e,r){return t(this,new BigNumber(e,r),0,1)};S.exponentiatedBy=S.pow=function(e,t){var r,a,o,c,u,h,d,f=this;if((e=new BigNumber(e)).c&&!e.isInteger())throw Error(s+"Exponent not an integer: "+e);null!=t&&(t=new BigNumber(t));c=e.e>14;if(!f.c||!f.c[0]||1==f.c[0]&&!f.e&&1==f.c.length||!e.c||!e.c[0]){d=new BigNumber(Math.pow(+f.valueOf(),c?2-isOdd(e):+e));return t?d.mod(t):d}u=e.s<0;if(t){if(t.c?!t.c[0]:!t.s)return new BigNumber(NaN);(a=!u&&f.isInteger()&&t.isInteger())&&(f=f.mod(t))}else{if(e.e>9&&(f.e>0||f.e<-1||(0==f.e?f.c[0]>1||c&&f.c[1]>=24e7:f.c[0]<8e13||c&&f.c[0]<=9999975e7))){o=f.s<0&&isOdd(e)?-0:0;f.e>-1&&(o=1/o);return new BigNumber(u?1/o:o)}B&&(o=i(B/l+2))}if(c){r=new BigNumber(.5);h=isOdd(e)}else h=e%2;u&&(e.s=1);d=new BigNumber(A);for(;;){if(h){if(!(d=d.times(f)).c)break;o?d.c.length>o&&(d.c.length=o):a&&(d=d.mod(t))}if(c){round(e=e.times(r),e.e+1,1);if(!e.c[0])break;c=e.e>14;h=isOdd(e)}else{if(!(e=n(e/2)))break;h=e%2}f=f.times(f);o?f.c&&f.c.length>o&&(f.c.length=o):a&&(f=f.mod(t))}if(a)return d;u&&(d=A.div(d));return t?d.mod(t):o?round(d,B,v,void 0):d};S.integerValue=function(e){var t=new BigNumber(this);null==e?e=v:intCheck(e,0,8);return round(t,t.e+1,e)};S.isEqualTo=S.eq=S.equals=function(e,t){return 0===compare(this,new BigNumber(e,t))};S.isFinite=function(){return!!this.c};S.isGreaterThan=S.gt=function(e,t){return compare(this,new BigNumber(e,t))>0};S.isGreaterThanOrEqualTo=S.gte=function(e,t){return 1===(t=compare(this,new BigNumber(e,t)))||0===t};S.isInteger=function(){return!!this.c&&bitFloor(this.e/l)>this.c.length-2};S.isLessThan=S.lt=function(e,t){return compare(this,new BigNumber(e,t))<0};S.isLessThanOrEqualTo=S.lte=function(e,t){return-1===(t=compare(this,new BigNumber(e,t)))||0===t};S.isNaN=function(){return!this.s};S.isNegative=function(){return this.s<0};S.isPositive=function(){return this.s>0};S.isZero=function(){return!!this.c&&0==this.c[0]};S.minus=function(e,t){var r,i,n,s,a=this,c=a.s;t=(e=new BigNumber(e,t)).s;if(!c||!t)return new BigNumber(NaN);if(c!=t){e.s=-t;return a.plus(e)}var u=a.e/l,h=e.e/l,d=a.c,f=e.c;if(!u||!h){if(!d||!f)return d?(e.s=-t,e):new BigNumber(f?a:NaN);if(!d[0]||!f[0])return f[0]?(e.s=-t,e):new BigNumber(d[0]?a:3==v?-0:0)}u=bitFloor(u);h=bitFloor(h);d=d.slice();if(c=u-h){if(s=c<0){c=-c;n=d}else{h=u;n=f}n.reverse();for(t=c;t--;n.push(0));n.reverse()}else{i=(s=(c=d.length)<(t=f.length))?c:t;for(c=t=0;t<i;t++)if(d[t]!=f[t]){s=d[t]<f[t];break}}s&&(n=d,d=f,f=n,e.s=-e.s);if((t=(i=f.length)-(r=d.length))>0)for(;t--;d[r++]=0);t=o-1;for(;i>c;){if(d[--i]<f[i]){for(r=i;r&&!d[--r];d[r]=t);--d[r];d[i]+=o}d[i]-=f[i]}for(;0==d[0];d.splice(0,1),--h);if(!d[0]){e.s=3==v?-1:1;e.c=[e.e=0];return e}return normalise(e,d,h)};S.modulo=S.mod=function(e,r){var i,n,s=this;e=new BigNumber(e,r);if(!s.c||!e.s||e.c&&!e.c[0])return new BigNumber(NaN);if(!e.c||s.c&&!s.c[0])return new BigNumber(s);if(9==C){n=e.s;e.s=1;i=t(s,e,0,3);e.s=n;i.s*=n}else i=t(s,e,0,C);(e=s.minus(i.times(e))).c[0]||1!=C||(e.s=s.s);return e};S.multipliedBy=S.times=function(e,t){var r,i,n,s,a,c,u,d,f,g,m,p,y,w,_,b=this,S=b.c,A=(e=new BigNumber(e,t)).c;if(!(S&&A&&S[0]&&A[0])){if(!b.s||!e.s||S&&!S[0]&&!A||A&&!A[0]&&!S)e.c=e.e=e.s=null;else{e.s*=b.s;if(S&&A){e.c=[0];e.e=0}else e.c=e.e=null}return e}i=bitFloor(b.e/l)+bitFloor(e.e/l);e.s*=b.s;(u=S.length)<(g=A.length)&&(y=S,S=A,A=y,n=u,u=g,g=n);for(n=u+g,y=[];n--;y.push(0));w=o;_=h;for(n=g;--n>=0;){r=0;m=A[n]%_;p=A[n]/_|0;for(s=n+(a=u);s>n;){r=((d=m*(d=S[--a]%_)+(c=p*d+(f=S[a]/_|0)*m)%_*_+y[s]+r)/w|0)+(c/_|0)+p*f;y[s--]=d%w}y[s]=r}r?++i:y.splice(0,1);return normalise(e,y,i)};S.negated=function(){var e=new BigNumber(this);e.s=-e.s||null;return e};S.plus=function(e,t){var r,i=this,n=i.s;t=(e=new BigNumber(e,t)).s;if(!n||!t)return new BigNumber(NaN);if(n!=t){e.s=-t;return i.minus(e)}var s=i.e/l,a=e.e/l,c=i.c,u=e.c;if(!s||!a){if(!c||!u)return new BigNumber(n/0);if(!c[0]||!u[0])return u[0]?e:new BigNumber(c[0]?i:0*n)}s=bitFloor(s);a=bitFloor(a);c=c.slice();if(n=s-a){if(n>0){a=s;r=u}else{n=-n;r=c}r.reverse();for(;n--;r.push(0));r.reverse()}(n=c.length)-(t=u.length)<0&&(r=u,u=c,c=r,t=n);for(n=0;t;){n=(c[--t]=c[t]+u[t]+n)/o|0;c[t]=o===c[t]?0:c[t]%o}if(n){c=[n].concat(c);++a}return normalise(e,c,a)};S.precision=S.sd=function(e,t){var r,i,n,s=this;if(null!=e&&e!==!!e){intCheck(e,1,d);null==t?t=v:intCheck(t,0,8);return round(new BigNumber(s),e,t)}if(!(r=s.c))return null;i=(n=r.length-1)*l+1;if(n=r[n]){for(;n%10==0;n/=10,i--);for(n=r[0];n>=10;n/=10,i++);}e&&s.e+1>i&&(i=s.e+1);return i};S.shiftedBy=function(e){intCheck(e,-c,c);return this.times("1e"+e)};S.squareRoot=S.sqrt=function(){var e,r,i,n,s,a=this,o=a.c,l=a.s,c=a.e,u=E+4,h=new BigNumber("0.5");if(1!==l||!o||!o[0])return new BigNumber(!l||l<0&&(!o||o[0])?NaN:o?a:1/0);if(0==(l=Math.sqrt(+a))||l==1/0){((r=coeffToString(o)).length+c)%2==0&&(r+="0");l=Math.sqrt(r);c=bitFloor((c+1)/2)-(c<0||c%2);i=new BigNumber(r=l==1/0?"1e"+c:(r=l.toExponential()).slice(0,r.indexOf("e")+1)+c)}else i=new BigNumber(l+"");if(i.c[0]){(l=(c=i.e)+u)<3&&(l=0);for(;;){s=i;i=h.times(s.plus(t(a,s,u,1)));if(coeffToString(s.c).slice(0,l)===(r=coeffToString(i.c)).slice(0,l)){i.e<c&&--l;if("9999"!=(r=r.slice(l-3,l+1))&&(n||"4999"!=r)){if(!+r||!+r.slice(1)&&"5"==r.charAt(0)){round(i,i.e+E+2,1);e=!i.times(i).eq(a)}break}if(!n){round(s,s.e+E+2,0);if(s.times(s).eq(a)){i=s;break}}u+=4;l+=4;n=1}}}return round(i,i.e+E+1,v,e)};S.toExponential=function(e,t){if(null!=e){intCheck(e,0,d);e++}return format(this,e,t,1)};S.toFixed=function(e,t){if(null!=e){intCheck(e,0,d);e=e+this.e+1}return format(this,e,t)};S.toFormat=function(e,t){var r=this.toFixed(e,t);if(this.c){var i,n=r.split("."),s=+M.groupSize,a=+M.secondaryGroupSize,o=M.groupSeparator,l=n[0],c=n[1],u=this.s<0,h=u?l.slice(1):l,d=h.length;a&&(i=s,s=a,a=i,d-=i);if(s>0&&d>0){i=d%s||s;l=h.substr(0,i);for(;i<d;i+=s)l+=o+h.substr(i,s);a>0&&(l+=o+h.slice(i));u&&(l="-"+l)}r=c?l+M.decimalSeparator+((a=+M.fractionGroupSize)?c.replace(new RegExp("\\d{"+a+"}\\B","g"),"$&"+M.fractionGroupSeparator):c):l}return r};S.toFraction=function(e){var r,i,n,a,o,c,h,d,f,g,m,p,y=this,w=y.c;if(null!=e&&(!(d=new BigNumber(e)).isInteger()&&(d.c||1!==d.s)||d.lt(A)))throw Error(s+"Argument "+(d.isInteger()?"out of range: ":"not an integer: ")+e);if(!w)return y.toString();i=new BigNumber(A);g=n=new BigNumber(A);a=f=new BigNumber(A);p=coeffToString(w);c=i.e=p.length-y.e-1;i.c[0]=u[(h=c%l)<0?l+h:h];e=!e||d.comparedTo(i)>0?c>0?i:g:d;h=I;I=1/0;d=new BigNumber(p);f.c[0]=0;for(;;){m=t(d,i,0,1);if(1==(o=n.plus(m.times(a))).comparedTo(e))break;n=a;a=o;g=f.plus(m.times(o=g));f=o;i=d.minus(m.times(o=i));d=o}o=t(e.minus(n),a,0,1);f=f.plus(o.times(g));n=n.plus(o.times(a));f.s=g.s=y.s;r=t(g,a,c*=2,v).minus(y).abs().comparedTo(t(f,n,c,v).minus(y).abs())<1?[g.toString(),a.toString()]:[f.toString(),n.toString()];I=h;return r};S.toNumber=function(){return+this};S.toPrecision=function(e,t){null!=e&&intCheck(e,1,d);return format(this,e,t,2)};S.toString=function(e){var t,r=this,i=r.s,n=r.e;if(null===n)if(i){t="Infinity";i<0&&(t="-"+t)}else t="NaN";else{t=coeffToString(r.c);if(null==e)t=n<=U||n>=P?toExponential(t,n):toFixedPoint(t,n,"0");else{intCheck(e,2,L.length,"Base");t=f(toFixedPoint(t,n,"0"),10,e,i,!0)}i<0&&r.c[0]&&(t="-"+t)}return t};S.valueOf=S.toJSON=function(){var e,t=this,r=t.e;if(null===r)return t.toString();e=coeffToString(t.c);e=r<=U||r>=P?toExponential(e,r):toFixedPoint(e,r,"0");return t.s<0?"-"+e:e};S._isBigNumber=!0;null!=e&&BigNumber.set(e);return BigNumber}())["default"]=t.BigNumber=t;e.BigNumber=t}(Class.scope);BigNumber=Class.scope.BigNumber;BigNumber.config({DECIMAL_PLACES:10});class NumberUtils{static isUint8(e){return Number.isInteger(e)&&e>=0&&e<=NumberUtils.UINT8_MAX}static isUint16(e){return Number.isInteger(e)&&e>=0&&e<=NumberUtils.UINT16_MAX}static isUint32(e){return Number.isInteger(e)&&e>=0&&e<=NumberUtils.UINT32_MAX}static isUint64(e){return Number.isInteger(e)&&e>=0&&e<=NumberUtils.UINT64_MAX}static randomUint32(){return Math.floor(Math.random()*(NumberUtils.UINT32_MAX+1))}static randomUint64(){return Math.floor(Math.random()*(NumberUtils.UINT64_MAX+1))}static fromBinary(e){return parseInt(e,2)}}NumberUtils.UINT8_MAX=255;NumberUtils.UINT16_MAX=65535;NumberUtils.UINT32_MAX=4294967295;NumberUtils.UINT64_MAX=Number.MAX_SAFE_INTEGER;Class.register(NumberUtils);class MerklePath{constructor(e){if(!Array.isArray(e)||!NumberUtils.isUint8(e.length)||e.some(e=>!(e instanceof MerklePathNode)))throw new Error("Malformed nodes");this._nodes=e}static compute(e,t,r=MerkleTree._hash){const i=r(t),n=[];MerklePath._compute(e,i,n,r);return new MerklePath(n)}static _compute(e,t,r,i){const n=e.length;let s;if(0===n)return{containsLeaf:!1,inner:s=Hash.light(new Uint8Array(0))};if(1===n)return{containsLeaf:(s=i(e[0])).equals(t),inner:s};const a=Math.round(n/2),o=e.slice(0,a),l=e.slice(a),{containsLeaf:c,inner:u}=MerklePath._compute(o,t,r,i),{containsLeaf:h,inner:d}=MerklePath._compute(l,t,r,i);s=Hash.light(BufferUtils.concatTypedArrays(u.serialize(),d.serialize()));if(c){r.push(new MerklePathNode(d,!1));return{containsLeaf:!0,inner:s}}if(h){r.push(new MerklePathNode(u,!0));return{containsLeaf:!0,inner:s}}return{containsLeaf:!1,inner:s}}computeRoot(e,t=MerkleTree._hash){let r=t(e);for(const i of this._nodes){const e=i.left,t=i.hash,n=new SerialBuffer(2*t.serializedSize);e&&t.serialize(n);r.serialize(n);e||t.serialize(n);r=Hash.light(n)}return r}static _compress(e){const t=e.length,r=Math.ceil(t/8),i=new Uint8Array(r);for(let n=0;n<t;n++)e[n].left&&(i[Math.floor(n/8)]|=128>>>n%8);return i}static unserialize(e){const t=e.readUint8(),r=Math.ceil(t/8),i=e.read(r),n=[];for(let s=0;s<t;s++){const t=0!=(i[Math.floor(s/8)]&128>>>s%8),r=Hash.unserialize(e);n.push(new MerklePathNode(r,t))}return new MerklePath(n)}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).writeUint8(this._nodes.length);e.write(MerklePath._compress(this._nodes));for(const t of this._nodes)t.hash.serialize(e);return e}get serializedSize(){return 1+Math.ceil(this._nodes.length/8)+this._nodes.reduce((e,t)=>e+t.hash.serializedSize,0)}equals(e){return e instanceof MerklePath&&this._nodes.length===e._nodes.length&&this._nodes.every((t,r)=>t.equals(e._nodes[r]))}get nodes(){return this._nodes}}Class.register(MerklePath);class MerklePathNode{constructor(e,t){this._hash=e;this._left=t}get hash(){return this._hash}get left(){return this._left}equals(e){return e instanceof MerklePathNode&&this._hash.equals(e.hash)&&this._left===e.left}}Class.register(MerklePathNode);class MnemonicUtils{static _crcChecksum(e){const t=8*e.length/32,r=CRC8.compute(e);return BufferUtils.toBinary([r]).slice(0,t)}static _sha256Checksum(e){const t=8*e.length/32,r=Hash.computeSha256(e);return BufferUtils.toBinary(r).slice(0,t)}static _entropyToBits(e){if(e.length<16)throw new Error("Invalid key, length < 16");if(e.length>32)throw new Error("Invalid key, length > 32");if(e.length%4!=0)throw new Error("Invalid key, length % 4 != 0");return BufferUtils.toBinary(e)}static _normalizeEntropy(e){"string"==typeof e&&(e=BufferUtils.fromHex(e));e instanceof Entropy&&(e=e.serialize());e instanceof ArrayBuffer&&(e=new Uint8Array(e));return e}static _bitsToMnemonic(e,t){return e.match(/(.{11})/g).map(e=>{const r=NumberUtils.fromBinary(e);return t[r]})}static _mnemonicToBits(e,t){const r=e;if(r.length<12)throw new Error("Invalid mnemonic, less than 12 words");if(r.length>24)throw new Error("Invalid mnemonic, more than 24 words");if(r.length%3!=0)throw new Error("Invalid mnemonic, words % 3 != 0");return r.map(function(e){const r=t.indexOf(e.toLowerCase());if(-1===r)throw new Error(`Invalid mnemonic, word >${e}< is not in wordlist`);return StringUtils.lpad(r.toString(2),"0",11)}).join("")}static _bitsToEntropy(e,t=!1){const r=e.length-(e.length%8||8),i=e.slice(0,r),n=e.slice(r),s=i.match(/(.{8})/g).map(NumberUtils.fromBinary);if(s.length<16)throw new Error("Invalid generated key, length < 16");if(s.length>32)throw new Error("Invalid generated key, length > 32");if(s.length%4!=0)throw new Error("Invalid generated key, length % 4 != 0");const a=new Uint8Array(s);if((t?MnemonicUtils._crcChecksum(a):MnemonicUtils._sha256Checksum(a))!==n)throw new Error("Invalid checksum");return a}static entropyToMnemonic(e,t){t=t||MnemonicUtils.DEFAULT_WORDLIST;e=MnemonicUtils._normalizeEntropy(e);const r=MnemonicUtils._entropyToBits(e)+MnemonicUtils._sha256Checksum(e);return MnemonicUtils._bitsToMnemonic(r,t)}static entropyToLegacyMnemonic(e,t){t=t||MnemonicUtils.DEFAULT_WORDLIST;e=MnemonicUtils._normalizeEntropy(e);const r=MnemonicUtils._entropyToBits(e)+MnemonicUtils._crcChecksum(e);return MnemonicUtils._bitsToMnemonic(r,t)}static mnemonicToEntropy(e,t){Array.isArray(e)||(e=e.trim().split(/\s+/g));t=t||MnemonicUtils.DEFAULT_WORDLIST;const r=MnemonicUtils._mnemonicToBits(e,t);return new Entropy(MnemonicUtils._bitsToEntropy(r,!1))}static legacyMnemonicToEntropy(e,t){Array.isArray(e)||(e=e.trim().split(/\s+/g));t=t||MnemonicUtils.DEFAULT_WORDLIST;const r=MnemonicUtils._mnemonicToBits(e,t);return new Entropy(MnemonicUtils._bitsToEntropy(r,!0))}static _salt(e){return`mnemonic${e||""}`}static mnemonicToSeed(e,t){Array.isArray(e)&&(e=e.join(" "));const r=BufferUtils.fromAscii(e),i=BufferUtils.fromAscii(MnemonicUtils._salt(t));return CryptoUtils.computePBKDF2sha512(r,i,2048,64)}static mnemonicToExtendedPrivateKey(e,t){const r=MnemonicUtils.mnemonicToSeed(e,t);return ExtendedPrivateKey.generateMasterKey(r)}static isCollidingChecksum(e){const t=MnemonicUtils._normalizeEntropy(e);return MnemonicUtils._crcChecksum(t)===MnemonicUtils._sha256Checksum(t)}static getMnemonicType(e,t){Array.isArray(e)||(e=e.trim().split(/\s+/g));t=t||MnemonicUtils.DEFAULT_WORDLIST;const r=MnemonicUtils._mnemonicToBits(e,t);let i=!0;try{MnemonicUtils._bitsToEntropy(r,!1)}catch(s){i=!1}let n=!0;try{MnemonicUtils._bitsToEntropy(r,!0)}catch(s){n=!1}if(i&&n)return MnemonicUtils.MnemonicType.UNKNOWN;if(!i&&!n)throw new Error("Invalid checksum");return i?MnemonicUtils.MnemonicType.BIP39:MnemonicUtils.MnemonicType.LEGACY}}MnemonicUtils.ENGLISH_WORDLIST=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];MnemonicUtils.DEFAULT_WORDLIST=MnemonicUtils.ENGLISH_WORDLIST;MnemonicUtils.MnemonicType={UNKNOWN:-1,LEGACY:0,BIP39:1};Object.freeze(MnemonicUtils);Class.register(MnemonicUtils);class PlatformUtils{static isBrowser(){return"undefined"!=typeof window}static isNodeJs(){return!PlatformUtils.isBrowser()&&"object"==typeof process&&"function"==typeof require}static supportsWebRTC(){return!!(PlatformUtils.isBrowser()?window.RTCPeerConnection||window.webkitRTCPeerConnection:null)}static supportsWS(){return!PlatformUtils.isBrowser()||location&&"http:"===location.protocol}static isOnline(){return!PlatformUtils.isBrowser()||!("onLine"in window.navigator)||window.navigator.onLine}}Class.register(PlatformUtils);class StringUtils{static isMultibyte(e){return/[\uD800-\uDFFF]/.test(e)}static isHex(e){return/^[0-9A-Fa-f]*$/.test(e)}static isHexBytes(e,t){return!!StringUtils.isHex(e)&&(e.length%2==0&&("number"!=typeof t||e.length/2===t))}static commonPrefix(e,t){let r=0;for(;r<e.length&&e[r]===t[r];++r);return e.substr(0,r)}static lpad(e,t,r){for(;e.length<r;)e=t+e;return e}}Class.register(StringUtils);class Policy{static coinsToSatoshis(e){return Math.round(e*Policy.SATOSHIS_PER_COIN)}static satoshisToCoins(e){return e/Policy.SATOSHIS_PER_COIN}static supplyAfter(e){let t=Math.floor(e/Policy._supplyCacheInterval)*Policy._supplyCacheInterval;const r=(t=Math.max(0,Math.min(t,Policy._supplyCacheMax)))/Policy._supplyCacheInterval,i=Math.floor(e/Policy._supplyCacheInterval);let n=0===t?Policy.INITIAL_SUPPLY:Policy._supplyCache.get(t);for(let s=r;s<i;++s){t=s*Policy._supplyCacheInterval;const e=(s+1)*Policy._supplyCacheInterval-1;n=Policy._supplyAfter(n,e,t);Policy._supplyCache.set(e+1,n);Policy._supplyCacheMax=e+1}return Policy._supplyAfter(n,e,i*Policy._supplyCacheInterval)}static _supplyAfter(e,t,r=0){let i=e;for(let n=r;n<=t;++n)i+=Policy._blockRewardAt(i,n);return i}static blockRewardAt(e){const t=Policy.supplyAfter(e-1);return Policy._blockRewardAt(t,e)}static _blockRewardAt(e,t){if(t<=0)return 0;const r=Policy.TOTAL_SUPPLY-e;return t>=Policy.EMISSION_TAIL_START&&r>=Policy.EMISSION_TAIL_REWARD?Policy.EMISSION_TAIL_REWARD:(r-r%Policy.EMISSION_SPEED)/Policy.EMISSION_SPEED}}Policy.BLOCK_TIME=60;Policy.BLOCK_SIZE_MAX=1e5;Policy.BLOCK_TARGET_MAX=new BigNumber(2).pow(240);Policy.DIFFICULTY_BLOCK_WINDOW=120;Policy.DIFFICULTY_MAX_ADJUSTMENT_FACTOR=2;Policy.TRANSACTION_VALIDITY_WINDOW=120;Policy.SATOSHIS_PER_COIN=1e5;Policy.TOTAL_SUPPLY=21e14;Policy.INITIAL_SUPPLY=252e12;Policy.EMISSION_SPEED=Math.pow(2,22);Policy.EMISSION_TAIL_START=48692960;Policy.EMISSION_TAIL_REWARD=4e3;Policy.M=240;Policy.K=120;Policy.DELTA=.15;Policy.NUM_BLOCKS_VERIFICATION=250;Policy.NUM_SNAPSHOTS_MAX=20;Policy._supplyCache=new Map;Policy._supplyCacheMax=0;Policy._supplyCacheInterval=5e3;Class.register(Policy);class Serializable{equals(e){return e instanceof Serializable&&BufferUtils.equals(this.serialize(),e.serialize())}compare(e){return BufferUtils.compare(this.serialize(),e.serialize())}hashCode(){return this.toBase64()}serialize(e){}toString(){return this.toBase64()}toBase64(){return BufferUtils.toBase64(this.serialize())}toHex(){return BufferUtils.toHex(this.serialize())}}Class.register(Serializable);class Hash extends Serializable{constructor(e,t=Hash.Algorithm.BLAKE2B){if(null===e)e=new Uint8Array(Hash.getSize(t));else{if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==Hash.getSize(t))throw new Error("Primitive: Invalid length")}super();this._obj=e;this._algorithm=t}static light(e){return Hash.blake2b(e)}static blake2b(e){return new Hash(Hash.computeBlake2b(e),Hash.Algorithm.BLAKE2B)}static hard(e){return Hash.argon2d(e)}static async argon2d(e){return new Hash(await(await CryptoWorker.getInstanceAsync()).computeArgon2d(e),Hash.Algorithm.ARGON2D)}static sha256(e){return new Hash(Hash.computeSha256(e),Hash.Algorithm.SHA256)}static sha512(e){return new Hash(Hash.computeSha512(e),Hash.Algorithm.SHA512)}static compute(e,t){switch(t){case Hash.Algorithm.BLAKE2B:return Hash.blake2b(e);case Hash.Algorithm.SHA256:return Hash.sha256(e);default:throw new Error("Invalid hash algorithm")}}static unserialize(e,t=Hash.Algorithm.BLAKE2B){return new Hash(e.read(Hash.getSize(t)),t)}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}subarray(e,t){return this._obj.subarray(e,t)}get serializedSize(){return Hash.SIZE.get(this._algorithm)}get array(){return this._obj}get algorithm(){return this._algorithm}equals(e){return e instanceof Hash&&e._algorithm===this._algorithm&&super.equals(e)}static fromBase64(e){return new Hash(BufferUtils.fromBase64(e))}static fromHex(e){return new Hash(BufferUtils.fromHex(e))}static fromString(e){try{return Hash.fromHex(e)}catch(t){}try{return Hash.fromBase64(e)}catch(t){}throw new Error("Invalid hash format")}static isHash(e){return e instanceof Hash}static getSize(e){const t=Hash.SIZE.get(e);if("number"!=typeof t)throw new Error("Invalid hash algorithm");return t}static computeBlake2b(e){if(PlatformUtils.isNodeJs()){const t=new Uint8Array(Hash.getSize(Hash.Algorithm.BLAKE2B));NodeNative.node_blake2(t,new Uint8Array(e));return t}{let r;try{r=Module.stackSave();const i=Hash.getSize(Hash.Algorithm.BLAKE2B),n=Module.stackAlloc(i),s=Module.stackAlloc(e.length);new Uint8Array(Module.HEAPU8.buffer,s,e.length).set(e);const a=Module._nimiq_blake2(n,s,e.length);if(0!==a)throw a;const o=new Uint8Array(i);o.set(new Uint8Array(Module.HEAPU8.buffer,n,i));return o}catch(t){Log.w(Hash,t);throw t}finally{r!==undefined&&Module.stackRestore(r)}}}static computeSha256(e){if(PlatformUtils.isNodeJs()){const t=new Uint8Array(Hash.getSize(Hash.Algorithm.SHA256));NodeNative.node_sha256(t,new Uint8Array(e));return t}{let r;try{r=Module.stackSave();const i=Hash.getSize(Hash.Algorithm.SHA256),n=Module.stackAlloc(i),s=Module.stackAlloc(e.length);new Uint8Array(Module.HEAPU8.buffer,s,e.length).set(e);Module._nimiq_sha256(n,s,e.length);const a=new Uint8Array(i);a.set(new Uint8Array(Module.HEAPU8.buffer,n,i));return a}catch(t){Log.w(Hash,t);throw t}finally{r!==undefined&&Module.stackRestore(r)}}}static computeSha512(e){if(PlatformUtils.isNodeJs()){const t=new Uint8Array(Hash.getSize(Hash.Algorithm.SHA512));NodeNative.node_sha512(t,new Uint8Array(e));return t}{let r;try{r=Module.stackSave();const i=Hash.getSize(Hash.Algorithm.SHA512),n=Module.stackAlloc(i),s=Module.stackAlloc(e.length);new Uint8Array(Module.HEAPU8.buffer,s,e.length).set(e);Module._nimiq_sha512(n,s,e.length);const a=new Uint8Array(i);a.set(new Uint8Array(Module.HEAPU8.buffer,n,i));return a}catch(t){Log.w(Hash,t);throw t}finally{r!==undefined&&Module.stackRestore(r)}}}}Hash.Algorithm={BLAKE2B:1,ARGON2D:2,SHA256:3,SHA512:4};Hash.SIZE=new Map;Hash.SIZE.set(Hash.Algorithm.BLAKE2B,32);Hash.SIZE.set(Hash.Algorithm.ARGON2D,32);Hash.SIZE.set(Hash.Algorithm.SHA256,32);Hash.SIZE.set(Hash.Algorithm.SHA512,64);Hash.NULL=new Hash(new Uint8Array(32));Class.register(Hash);class PrivateKey extends Serializable{constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==PrivateKey.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static generate(){const e=new Uint8Array(PrivateKey.SIZE);CryptoWorker.lib.getRandomValues(e);return new PrivateKey(e)}static unserialize(e){return new PrivateKey(e.read(PrivateKey.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return PrivateKey.SIZE}overwrite(e){this._obj.set(e._obj)}equals(e){return e instanceof PrivateKey&&super.equals(e)}static _privateKeyDelinearize(e,t,r){if(e.byteLength!==PrivateKey.SIZE||t.byteLength!==PublicKey.SIZE||r.byteLength!==Hash.getSize(Hash.Algorithm.SHA512))throw Error("Wrong buffer size.");if(PlatformUtils.isNodeJs()){const i=new Uint8Array(PublicKey.SIZE);NodeNative.node_ed25519_derive_delinearized_private_key(i,new Uint8Array(r),new Uint8Array(t),new Uint8Array(e));return i}{let n;try{n=Module.stackSave();const s=Module.stackAlloc(PublicKey.SIZE),a=Module.stackAlloc(e.length),o=Module.stackAlloc(t.length),l=Module.stackAlloc(r.length);new Uint8Array(Module.HEAPU8.buffer,a,e.length).set(e);new Uint8Array(Module.HEAPU8.buffer,o,t.length).set(t);new Uint8Array(Module.HEAPU8.buffer,l,r.length).set(r);Module._ed25519_derive_delinearized_private_key(s,l,o,a);const c=new Uint8Array(PrivateKey.SIZE);c.set(new Uint8Array(Module.HEAPU8.buffer,s,PrivateKey.SIZE));return c}catch(i){Log.w(CryptoWorkerImpl,i);throw i}finally{n!==undefined&&Module.stackRestore(n)}}}}PrivateKey.SIZE=32;Class.register(PrivateKey);class PublicKey extends Serializable{static copy(e){return e?new PublicKey(new Uint8Array(e._obj)):e}constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==PublicKey.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static derive(e){return new PublicKey(PublicKey._publicKeyDerive(e._obj))}static sum(e){(e=e.slice()).sort((e,t)=>e.compare(t));return PublicKey._delinearizeAndAggregatePublicKeys(e)}static unserialize(e){return new PublicKey(e.read(PublicKey.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return PublicKey.SIZE}equals(e){return e instanceof PublicKey&&super.equals(e)}hash(){return Hash.light(this.serialize())}compare(e){return BufferUtils.compare(this._obj,e._obj)}toAddress(){return Address.fromHash(this.hash())}toPeerId(){return new PeerId(this.hash().subarray(0,16))}static _delinearizeAndAggregatePublicKeys(e){const t=e.map(e=>e.serialize()),r=PublicKey._publicKeysHash(t),i=PublicKey._publicKeysDelinearizeAndAggregate(t,r);return new PublicKey(i)}static _publicKeyDerive(e){if(e.byteLength!==PrivateKey.SIZE)throw Error("Wrong buffer size.");if(PlatformUtils.isNodeJs()){const t=new Uint8Array(PublicKey.SIZE);NodeNative.node_ed25519_public_key_derive(t,new Uint8Array(e));return t}{let r;try{r=Module.stackSave();const i=Module.stackAlloc(PublicKey.SIZE),n=new Uint8Array(Module.HEAP8.buffer,i,PrivateKey.SIZE);n.set(e);const s=Module.stackAlloc(e.length),a=new Uint8Array(Module.HEAP8.buffer,s,PrivateKey.SIZE);a.set(e);Module._ed25519_public_key_derive(i,s);a.fill(0);const o=new Uint8Array(PublicKey.SIZE);o.set(n);return o}catch(t){Log.w(PublicKey,t);throw t}finally{r!==undefined&&Module.stackRestore(r)}}}static _publicKeysHash(e){if(e.some(e=>e.byteLength!==PublicKey.SIZE))throw Error("Wrong buffer size.");const t=new Uint8Array(e.length*PublicKey.SIZE);for(let i=0;i<e.length;++i)t.set(e[i],i*PublicKey.SIZE);if(PlatformUtils.isNodeJs()){const r=new Uint8Array(Hash.getSize(Hash.Algorithm.SHA512));NodeNative.node_ed25519_hash_public_keys(r,t,e.length);return r}{let i;try{i=Module.stackSave();const n=Hash.getSize(Hash.Algorithm.SHA512),s=Module.stackAlloc(n),a=Module.stackAlloc(t.length);new Uint8Array(Module.HEAPU8.buffer,a,t.length).set(t);Module._ed25519_hash_public_keys(s,a,e.length);const o=new Uint8Array(n);o.set(new Uint8Array(Module.HEAPU8.buffer,s,n));return o}catch(r){Log.w(PublicKey,r);throw r}finally{i!==undefined&&Module.stackRestore(i)}}}static _publicKeyDelinearize(e,t){if(e.byteLength!==PublicKey.SIZE||t.byteLength!==Hash.getSize(Hash.Algorithm.SHA512))throw Error("Wrong buffer size.");if(PlatformUtils.isNodeJs()){const r=new Uint8Array(PublicKey.SIZE);NodeNative.node_ed25519_delinearize_public_key(r,new Uint8Array(t),new Uint8Array(e));return r}{let i;try{i=Module.stackSave();const n=Module.stackAlloc(PublicKey.SIZE),s=Module.stackAlloc(e.length),a=Module.stackAlloc(t.length);new Uint8Array(Module.HEAPU8.buffer,s,e.length).set(e);new Uint8Array(Module.HEAPU8.buffer,a,t.length).set(t);Module._ed25519_delinearize_public_key(n,a,s);const o=new Uint8Array(PublicKey.SIZE);o.set(new Uint8Array(Module.HEAPU8.buffer,n,PublicKey.SIZE));return o}catch(r){Log.w(PublicKey,r);throw r}finally{i!==undefined&&Module.stackRestore(i)}}}static _publicKeysDelinearizeAndAggregate(e,t){if(e.some(e=>e.byteLength!==PublicKey.SIZE)||t.byteLength!==Hash.getSize(Hash.Algorithm.SHA512))throw Error("Wrong buffer size.");const r=new Uint8Array(e.length*PublicKey.SIZE);for(let n=0;n<e.length;++n)r.set(e[n],n*PublicKey.SIZE);if(PlatformUtils.isNodeJs()){const i=new Uint8Array(PublicKey.SIZE);NodeNative.node_ed25519_aggregate_delinearized_public_keys(i,new Uint8Array(t),r,e.length);return i}{let n;try{n=Module.stackSave();const s=Module.stackAlloc(PublicKey.SIZE),a=Module.stackAlloc(r.length),o=Module.stackAlloc(t.length);new Uint8Array(Module.HEAPU8.buffer,a,r.length).set(r);new Uint8Array(Module.HEAPU8.buffer,o,t.length).set(t);Module._ed25519_aggregate_delinearized_public_keys(s,o,a,e.length);const l=new Uint8Array(PublicKey.SIZE);l.set(new Uint8Array(Module.HEAPU8.buffer,s,PublicKey.SIZE));return l}catch(i){Log.w(PublicKey,i);throw i}finally{n!==undefined&&Module.stackRestore(n)}}}}PublicKey.SIZE=32;Class.register(PublicKey);class KeyPair extends Serializable{constructor(e,t,r=!1,i=null){if(!(e instanceof Object))throw new Error("Primitive: Invalid type");if(!(t instanceof Object))throw new Error("Primitive: Invalid type");super();this._locked=r;this._lockedInternally=r;this._lockSalt=i;this._publicKey=t;this._internalPrivateKey=new PrivateKey(e.serialize())}static generate(){const e=PrivateKey.generate();return new KeyPair(e,PublicKey.derive(e))}static derive(e){return new KeyPair(e,PublicKey.derive(e))}static fromHex(e){return KeyPair.unserialize(BufferUtils.fromHex(e))}static async fromEncrypted(e,t){const r=await CryptoUtils.decryptOtpKdf(e,t);return KeyPair.derive(new PrivateKey(r))}static unserialize(e){const t=PrivateKey.unserialize(e),r=PublicKey.unserialize(e);let i=!1,n=null;if(e.readPos<e.byteLength){if(1===e.readUint8()){i=!0;n=e.read(32)}}return new KeyPair(t,r,i,n)}serialize(e){e=e||new SerialBuffer(this.serializedSize);this._privateKey.serialize(e);this.publicKey.serialize(e);if(this._locked){e.writeUint8(1);e.write(this._lockSalt)}else e.writeUint8(0);return e}get privateKey(){if(this.isLocked)throw new Error("Wallet is locked");return this._privateKey}get _privateKey(){return this._unlockedPrivateKey||this._internalPrivateKey}get publicKey(){return this._publicKey||(this._publicKey=new PublicKey(this._obj.publicKey))}get serializedSize(){return this._privateKey.serializedSize+this.publicKey.serializedSize+(this._locked?this._lockSalt.byteLength+1:1)}async exportEncrypted(e,t){const r=this._locked;if(this._locked)try{await this.unlock(t||e)}catch(n){throw new Error("KeyPair is locked and lock key mismatches")}const i=CryptoUtils.encryptOtpKdf(this._privateKey.serialize(),e);r&&this.relock();return i}get encryptedSize(){return CryptoUtils.ENCRYPTION_SIZE}async lock(e,t){if(this._locked)throw new Error("KeyPair already locked");t&&(this._lockSalt=t);if(!this._lockSalt||0===this._lockSalt.length){this._lockSalt=new Uint8Array(32);CryptoWorker.lib.getRandomValues(this._lockSalt)}this._internalPrivateKey.overwrite(await this._otpPrivateKey(e));this._clearUnlockedPrivateKey();this._locked=!0;this._lockedInternally=!0}async unlock(e){if(!this._locked)throw new Error("KeyPair not locked");const t=await this._otpPrivateKey(e);if(!PublicKey.derive(t).equals(this.publicKey))throw new Error("Invalid key");this._unlockedPrivateKey=t;this._locked=!1}relock(){if(this._locked)throw new Error("KeyPair already locked");if(!this._lockedInternally)throw new Error("KeyPair was never locked");this._clearUnlockedPrivateKey();this._locked=!0}_clearUnlockedPrivateKey(){if(this._lockedInternally&&!this._locked){this._unlockedPrivateKey.overwrite(PrivateKey.unserialize(new SerialBuffer(this._unlockedPrivateKey.serializedSize)));this._unlockedPrivateKey=null}}async _otpPrivateKey(e){return new PrivateKey(await CryptoUtils.otpKdf(this._privateKey.serialize(),e,this._lockSalt,KeyPair.LOCK_KDF_ROUNDS))}get isLocked(){return this._locked}equals(e){return e instanceof KeyPair&&super.equals(e)}}KeyPair.LOCK_KDF_ROUNDS=256;Class.register(KeyPair);class Entropy extends Serializable{constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==Entropy.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static generate(){const e=new Uint8Array(Entropy.SIZE);CryptoWorker.lib.getRandomValues(e);return new Entropy(e)}toExtendedPrivateKey(e,t){return MnemonicUtils.mnemonicToExtendedPrivateKey(this.toMnemonic(t),e)}toMnemonic(e){return MnemonicUtils.entropyToMnemonic(this,e)}static unserialize(e){return new Entropy(e.read(Entropy.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return Entropy.SIZE}overwrite(e){this._obj.set(e._obj)}equals(e){return e instanceof Entropy&&super.equals(e)}}Entropy.SIZE=32;Class.register(Entropy);class ExtendedPrivateKey extends Serializable{constructor(e,t){super();if(!(e instanceof PrivateKey))throw new Error("ExtendedPrivateKey: Invalid key");if(!(t instanceof Uint8Array))throw new Error("ExtendedPrivateKey: Invalid chainCode");if(t.length!==ExtendedPrivateKey.CHAIN_CODE_SIZE)throw new Error("ExtendedPrivateKey: Invalid chainCode length");this._key=e;this._chainCode=t}static generateMasterKey(e){const t=BufferUtils.fromAscii("ed25519 seed"),r=CryptoUtils.computeHmacSha512(t,e);return new ExtendedPrivateKey(new PrivateKey(r.slice(0,32)),r.slice(32))}derive(e){e<2147483648&&(e+=2147483648);const t=new SerialBuffer(1+PrivateKey.SIZE+4);t.writeUint8(0);this._key.serialize(t);t.writeUint32(e);const r=CryptoUtils.computeHmacSha512(this._chainCode,t);return new ExtendedPrivateKey(new PrivateKey(r.slice(0,32)),r.slice(32))}static isValidPath(e){if(null===e.match(/^m(\/[0-9]+')*$/))return!1;const t=e.split("/");for(let r=1;r<t.length;r++)if(!NumberUtils.isUint32(parseInt(t[r])))return!1;return!0}derivePath(e){if(!ExtendedPrivateKey.isValidPath(e))throw new Error("Invalid path");let t=this;const r=e.split("/");for(let i=1;i<r.length;i++){const e=parseInt(r[i]);t=t.derive(e)}return t}static derivePathFromSeed(e,t){return ExtendedPrivateKey.generateMasterKey(t).derivePath(e)}static unserialize(e){const t=PrivateKey.unserialize(e),r=e.read(ExtendedPrivateKey.CHAIN_CODE_SIZE);return new ExtendedPrivateKey(t,r)}serialize(e){e=e||new SerialBuffer(this.serializedSize);this._key.serialize(e);e.write(this._chainCode);return e}get serializedSize(){return this._key.serializedSize+ExtendedPrivateKey.CHAIN_CODE_SIZE}equals(e){return e instanceof ExtendedPrivateKey&&super.equals(e)}get privateKey(){return this._key}toAddress(){return PublicKey.derive(this._key).toAddress()}}ExtendedPrivateKey.CHAIN_CODE_SIZE=32;Class.register(ExtendedPrivateKey);class RandomSecret extends Serializable{constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==RandomSecret.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static unserialize(e){return new RandomSecret(e.read(RandomSecret.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return RandomSecret.SIZE}equals(e){return e instanceof RandomSecret&&super.equals(e)}}RandomSecret.SIZE=32;Class.register(RandomSecret);class Signature extends Serializable{static copy(e){if(!e)return e;const t=new Uint8Array(e._obj);return new Signature(t)}constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==Signature.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static create(e,t,r){return new Signature(Signature._signatureCreate(e._obj,t._obj,r))}static fromPartialSignatures(e,t){const r=Signature._combinePartialSignatures(e.serialize(),t.map(e=>e.serialize()));return new Signature(r)}static unserialize(e){return new Signature(e.read(Signature.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return Signature.SIZE}verify(e,t){return Signature._signatureVerify(e._obj,t,this._obj)}equals(e){return e instanceof Signature&&super.equals(e)}static _combinePartialSignatures(e,t){const r=Signature._aggregatePartialSignatures(t);return BufferUtils.concatTypedArrays(e,r)}static _aggregatePartialSignatures(e){return e.reduce((e,t)=>Signature._scalarsAdd(e,t))}static _scalarsAdd(e,t){if(e.byteLength!==PartialSignature.SIZE||t.byteLength!==PartialSignature.SIZE)throw Error("Wrong buffer size.");if(PlatformUtils.isNodeJs()){const r=new Uint8Array(PartialSignature.SIZE);NodeNative.node_ed25519_add_scalars(r,new Uint8Array(e),new Uint8Array(t));return r}{let i;try{i=Module.stackSave();const n=Module.stackAlloc(PartialSignature.SIZE),s=Module.stackAlloc(e.length),a=Module.stackAlloc(t.length);new Uint8Array(Module.HEAPU8.buffer,s,e.length).set(e);new Uint8Array(Module.HEAPU8.buffer,a,t.length).set(t);Module._ed25519_add_scalars(n,s,a);const o=new Uint8Array(PartialSignature.SIZE);o.set(new Uint8Array(Module.HEAPU8.buffer,n,PartialSignature.SIZE));return o}catch(r){Log.w(Signature,r);throw r}finally{i!==undefined&&Module.stackRestore(i)}}}static _signatureCreate(e,t,r){if(t.byteLength!==PublicKey.SIZE||e.byteLength!==PrivateKey.SIZE)throw Error("Wrong buffer size.");if(PlatformUtils.isNodeJs()){const i=new Uint8Array(Signature.SIZE);NodeNative.node_ed25519_sign(i,new Uint8Array(r),new Uint8Array(t),new Uint8Array(e));return i}{let n;try{n=Module.stackSave();const s=Module.stackAlloc(Signature.SIZE),a=new Uint8Array(Module.HEAP8.buffer,s,Signature.SIZE),o=Module.stackAlloc(r.length);new Uint8Array(Module.HEAP8.buffer,o,r.length).set(r);const l=Module.stackAlloc(t.length);new Uint8Array(Module.HEAP8.buffer,l,t.length).set(t);const c=Module.stackAlloc(e.length),u=new Uint8Array(Module.HEAP8.buffer,c,e.length);u.set(e);Module._ed25519_sign(s,o,r.byteLength,l,c);u.fill(0);const h=new Uint8Array(Signature.SIZE);h.set(a);return h}catch(i){Log.w(Signature,i);throw i}finally{n!==undefined&&Module.stackRestore(n)}}}static _signatureVerify(e,t,r){if(PlatformUtils.isNodeJs())return!!NodeNative.node_ed25519_verify(new Uint8Array(r),new Uint8Array(t),new Uint8Array(e));{let n;try{n=Module.stackSave();const s=Module.stackAlloc(e.length);new Uint8Array(Module.HEAP8.buffer,s,e.length).set(e);const a=Module.stackAlloc(t.length);new Uint8Array(Module.HEAP8.buffer,a,t.length).set(t);const o=Module.stackAlloc(r.length);new Uint8Array(Module.HEAP8.buffer,o,r.length).set(r);return!!Module._ed25519_verify(o,a,t.byteLength,s)}catch(i){Log.w(Signature,i);throw i}finally{n!==undefined&&Module.stackRestore(n)}}}}Signature.SIZE=64;Class.register(Signature);class Commitment extends Serializable{static copy(e){return e?new Commitment(new Uint8Array(e._obj)):e}static sum(e){return new Commitment(Commitment._commitmentsAggregate(e.map(e=>e._obj)))}constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==Commitment.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static unserialize(e){return new Commitment(e.read(Commitment.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return Commitment.SIZE}equals(e){return e instanceof Commitment&&super.equals(e)}static _commitmentsAggregate(e){if(e.some(e=>e.byteLength!==PublicKey.SIZE))throw Error("Wrong buffer size.");const t=new Uint8Array(e.length*PublicKey.SIZE);for(let i=0;i<e.length;++i)t.set(e[i],i*PublicKey.SIZE);if(PlatformUtils.isNodeJs()){const r=new Uint8Array(PublicKey.SIZE);NodeNative.node_ed25519_aggregate_commitments(r,t,e.length);return r}{let i;try{i=Module.stackSave();const n=Module.stackAlloc(PublicKey.SIZE),s=Module.stackAlloc(t.length);new Uint8Array(Module.HEAPU8.buffer,s,t.length).set(t);Module._ed25519_aggregate_commitments(n,s,e.length);const a=new Uint8Array(PublicKey.SIZE);a.set(new Uint8Array(Module.HEAPU8.buffer,n,PublicKey.SIZE));return a}catch(r){Log.w(CryptoWorkerImpl,r);throw r}finally{i!==undefined&&Module.stackRestore(i)}}}}Commitment.SIZE=32;Class.register(Commitment);class CommitmentPair extends Serializable{constructor(e,t){super();if(!(e instanceof RandomSecret))throw new Error("Primitive: Invalid type");if(!(t instanceof Commitment))throw new Error("Primitive: Invalid type");this._secret=e;this._commitment=t}static generate(){const e=new Uint8Array(CommitmentPair.RANDOMNESS_SIZE);CryptoWorker.lib.getRandomValues(e);const t=CommitmentPair._commitmentCreate(e);return new CommitmentPair(new RandomSecret(t.secret),new Commitment(t.commitment))}static unserialize(e){const t=RandomSecret.unserialize(e),r=Commitment.unserialize(e);return new CommitmentPair(t,r)}static fromHex(e){return this.unserialize(BufferUtils.fromHex(e))}serialize(e){e=e||new SerialBuffer(this.serializedSize);this.secret.serialize(e);this.commitment.serialize(e);return e}get secret(){return this._secret}get commitment(){return this._commitment}get serializedSize(){return this.secret.serializedSize+this.commitment.serializedSize}equals(e){return e instanceof CommitmentPair&&super.equals(e)}static _commitmentCreate(e){if(PlatformUtils.isNodeJs()){const t=new Uint8Array(PublicKey.SIZE),r=new Uint8Array(PrivateKey.SIZE);NodeNative.node_ed25519_create_commitment(r,t,e);return{commitment:t,secret:r}}{let r;try{r=Module.stackSave();const i=Module.stackAlloc(PublicKey.SIZE),n=Module.stackAlloc(PrivateKey.SIZE),s=Module.stackAlloc(e.length);new Uint8Array(Module.HEAPU8.buffer,s,e.length).set(e);const a=Module._ed25519_create_commitment(n,i,s);if(1!==a)throw new Error(`Secret must not be 0 or 1: ${a}`);const o=new Uint8Array(PublicKey.SIZE),l=new Uint8Array(PrivateKey.SIZE);o.set(new Uint8Array(Module.HEAPU8.buffer,i,PublicKey.SIZE));l.set(new Uint8Array(Module.HEAPU8.buffer,n,PrivateKey.SIZE));return{commitment:o,secret:l}}catch(t){Log.w(CommitmentPair,t);throw t}finally{r!==undefined&&Module.stackRestore(r)}}}}CommitmentPair.SERIALIZED_SIZE=RandomSecret.SIZE+Signature.SIZE;CommitmentPair.RANDOMNESS_SIZE=32;Class.register(CommitmentPair);class PartialSignature extends Serializable{constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==PartialSignature.SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static create(e,t,r,i,n,s){const a=PartialSignature._delinearizedPartialSignatureCreate(r.map(e=>e._obj),e._obj,t._obj,i._obj,n._obj,s);return new PartialSignature(a)}static unserialize(e){return new PartialSignature(e.read(PartialSignature.SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}get serializedSize(){return PartialSignature.SIZE}equals(e){return e instanceof PartialSignature&&super.equals(e)}static _delinearizedPartialSignatureCreate(e,t,r,i,n,s){if(e.some(e=>e.byteLength!==PublicKey.SIZE)||t.byteLength!==PrivateKey.SIZE||r.byteLength!==PublicKey.SIZE||i.byteLength!==RandomSecret.SIZE||n.byteLength!==Commitment.SIZE)throw Error("Wrong buffer size.");const a=new Uint8Array(e.length*PublicKey.SIZE);for(let l=0;l<e.length;++l)a.set(e[l],l*PublicKey.SIZE);if(PlatformUtils.isNodeJs()){const o=new Uint8Array(PartialSignature.SIZE);NodeNative.node_ed25519_delinearized_partial_sign(o,new Uint8Array(s),new Uint8Array(n),new Uint8Array(i),new Uint8Array(a),e.length,new Uint8Array(r),new Uint8Array(t));return o}{let l;try{l=Module.stackSave();const c=Module.stackAlloc(PartialSignature.SIZE),u=Module.stackAlloc(a.length),h=Module.stackAlloc(t.length),d=Module.stackAlloc(r.length),f=Module.stackAlloc(i.length),g=Module.stackAlloc(n.length),m=Module.stackAlloc(s.length);new Uint8Array(Module.HEAPU8.buffer,u,a.length).set(a);new Uint8Array(Module.HEAPU8.buffer,h,t.length).set(t);new Uint8Array(Module.HEAPU8.buffer,d,r.length).set(r);new Uint8Array(Module.HEAPU8.buffer,f,i.length).set(i);new Uint8Array(Module.HEAPU8.buffer,g,n.length).set(n);new Uint8Array(Module.HEAPU8.buffer,m,s.length).set(s);Module._ed25519_delinearized_partial_sign(c,m,s.length,g,f,u,e.length,d,h);const p=new Uint8Array(PartialSignature.SIZE);p.set(new Uint8Array(Module.HEAPU8.buffer,c,PartialSignature.SIZE));return p}catch(o){Log.w(CryptoWorkerImpl,o);throw o}finally{l!==undefined&&Module.stackRestore(l)}}}}PartialSignature.SIZE=32;Class.register(PartialSignature);class Address extends Serializable{static copy(e){if(!e)return e;const t=new Uint8Array(e._obj);return new Address(t)}static fromHash(e){return new Address(e.subarray(0,Address.SERIALIZED_SIZE))}constructor(e){super();if(!(e instanceof Uint8Array))throw new Error("Primitive: Invalid type");if(e.length!==Address.SERIALIZED_SIZE)throw new Error("Primitive: Invalid length");this._obj=e}static unserialize(e){return new Address(e.read(Address.SERIALIZED_SIZE))}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).write(this._obj);return e}subarray(e,t){return this._obj.subarray(e,t)}get serializedSize(){return Address.SERIALIZED_SIZE}equals(e){return e instanceof Address&&super.equals(e)}static fromString(e){try{return Address.fromUserFriendlyAddress(e)}catch(t){}try{return Address.fromHex(e)}catch(t){}try{return Address.fromBase64(e)}catch(t){}throw new Error("Invalid address format")}static fromBase64(e){return new Address(BufferUtils.fromBase64(e))}static fromHex(e){return new Address(BufferUtils.fromHex(e))}static fromUserFriendlyAddress(e){if((e=e.replace(/ /g,"")).substr(0,2).toUpperCase()!==Address.CCODE)throw new Error("Invalid Address: Wrong country code");if(36!==e.length)throw new Error("Invalid Address: Should be 36 chars (ignoring spaces)");if(1!==Address._ibanCheck(e.substr(4)+e.substr(0,4)))throw new Error("Invalid Address: Checksum invalid");return new Address(BufferUtils.fromBase32(e.substr(4)))}static _ibanCheck(e){const t=e.split("").map(e=>{const t=e.toUpperCase().charCodeAt(0);return t>=48&&t<=57?e:(t-55).toString()}).join("");let r="";for(let i=0;i<Math.ceil(t.length/6);i++)r=(parseInt(r+t.substr(6*i,6))%97).toString();return parseInt(r)}toUserFriendlyAddress(e=!0){const t=BufferUtils.toBase32(this.serialize()),r=("00"+(98-Address._ibanCheck(t+Address.CCODE+"00"))).slice(-2);let i=Address.CCODE+r+t;e&&(i=i.replace(/.{4}/g,"$& ").trim());return i}}Address.CCODE="NQ";Address.SERIALIZED_SIZE=20;Address.HEX_SIZE=40;Address.NULL=new Address(new Uint8Array(Address.SERIALIZED_SIZE));Address.CONTRACT_CREATION=new Address(new Uint8Array(Address.SERIALIZED_SIZE));Class.register(Address);class Account{constructor(e,t){if(!NumberUtils.isUint8(e))throw new Error("Malformed type");if(!NumberUtils.isUint64(t))throw new Error("Malformed balance");this._type=e;this._balance=t}static unserialize(e){const t=e.readUint8();e.readPos--;if(!Account.TYPE_MAP.has(t))throw new Error("Unknown account type");return Account.TYPE_MAP.get(t).unserialize(e)}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).writeUint8(this._type);e.writeUint64(this._balance);return e}get serializedSize(){return 9}equals(e){return BufferUtils.equals(this.serialize(),e.serialize())}toString(){return`Account{type=${this._type}, balance=${this._balance.toString()}`}get balance(){return this._balance}get type(){return this._type}withBalance(e){throw new Error("Not yet implemented.")}withOutgoingTransaction(e,t,r,i=!1){if(i){if(t<e.validityStartHeight||t>=e.validityStartHeight+Policy.TRANSACTION_VALIDITY_WINDOW)throw new Error("Validity Error!");return this.withBalance(this._balance+e.value+e.fee)}{const i=this._balance-e.value-e.fee;if(i<0)throw new Error("Balance Error!");if(t<e.validityStartHeight||t>=e.validityStartHeight+Policy.TRANSACTION_VALIDITY_WINDOW)throw new Error("Validity Error!");if(r.containsTransaction(e))throw new Error("Double Transaction Error!");return this.withBalance(i)}}withIncomingTransaction(e,t,r=!1){if(r){const t=this._balance-e.value;if(t<0)throw new Error("Balance Error!");return this.withBalance(t)}return this.withBalance(this._balance+e.value)}withContractCommand(e,t,r=!1){throw new Error("Not yet implemented")}isInitial(){return this===Account.INITIAL}isToBePruned(){return 0===this._balance&&!this.isInitial()}}Account.Type={BASIC:0,VESTING:1,HTLC:2};Account.TYPE_MAP=new Map;Class.register(Account);class Transaction{constructor(e,t,r,i,n,s,a,o,l,c,u,h=GenesisConfig.NETWORK_ID){if(!(t instanceof Address))throw new Error("Malformed sender");if(!NumberUtils.isUint8(r))throw new Error("Malformed sender type");if(!(i instanceof Address))throw new Error("Malformed recipient");if(!NumberUtils.isUint8(n))throw new Error("Malformed recipient type");if(!NumberUtils.isUint64(s)||0===s)throw new Error("Malformed value");if(!NumberUtils.isUint64(a))throw new Error("Malformed fee");if(!NumberUtils.isUint32(o))throw new Error("Malformed validityStartHeight");if(!NumberUtils.isUint8(l)&&(l&~Transaction.Flag.ALL)>0)throw new Error("Malformed flags");if(!(c instanceof Uint8Array&&NumberUtils.isUint16(c.byteLength)))throw new Error("Malformed data");if(u&&(!(u instanceof Uint8Array)||!NumberUtils.isUint16(u.byteLength)))throw new Error("Malformed proof");if(!NumberUtils.isUint8(h))throw new Error("Malformed networkId");this._format=e;this._sender=t;this._senderType=r;this._recipient=i;this._recipientType=n;this._value=s;this._fee=a;this._networkId=h;this._validityStartHeight=o;this._flags=l;this._data=c;this._proof=u;this._recipient===Address.CONTRACT_CREATION&&(this._recipient=this.getContractCreationAddress())}static unserialize(e){const t=e.readUint8();e.readPos--;if(!Transaction.FORMAT_MAP.has(t))throw new Error("Invalid transaction type");return Transaction.FORMAT_MAP.get(t).unserialize(e)}serializeContent(e){(e=e||new SerialBuffer(this.serializedContentSize)).writeUint16(this._data.byteLength);e.write(this._data);this._sender.serialize(e);e.writeUint8(this._senderType);this._recipient.serialize(e);e.writeUint8(this._recipientType);e.writeUint64(this._value);e.writeUint64(this._fee);e.writeUint32(this._validityStartHeight);e.writeUint8(this._networkId);e.writeUint8(this._flags);return e}get serializedContentSize(){return 2+this._data.byteLength+this._sender.serializedSize+1+this._recipient.serializedSize+1+8+8+4+1+1}verify(e){this._valid===undefined&&(this._valid=this._verify(e));return this._valid}_verify(e=GenesisConfig.NETWORK_ID){if(this._networkId!==e){Log.w(Transaction,"Transaction is not valid in this network",this);return!1}if(this._recipient.equals(this._sender)){Log.w(Transaction,"Sender and recipient must not match",this);return!1}if(!Account.TYPE_MAP.has(this._senderType)||!Account.TYPE_MAP.has(this._recipientType)){Log.w(Transaction,"Invalid account type",this);return!1}if(!Account.TYPE_MAP.get(this._senderType).verifyOutgoingTransaction(this)){Log.w(Transaction,"Invalid for sender",this);return!1}if(!Account.TYPE_MAP.get(this._recipientType).verifyIncomingTransaction(this)){Log.w(Transaction,"Invalid for recipient",this);return!1}return!0}get serializedSize(){throw new Error("Getter needs to be overwritten by subclasses")}serialize(e){throw new Error("Method needs to be overwritten by subclasses")}hash(){this._hash=this._hash||Hash.light(this.serializeContent());return this._hash}compare(e){return this.fee/this.serializedSize>e.fee/e.serializedSize?-1:this.fee/this.serializedSize<e.fee/e.serializedSize?1:this.serializedSize>e.serializedSize?-1:this.serializedSize<e.serializedSize?1:this.fee>e.fee?-1:this.fee<e.fee?1:this.value>e.value?-1:this.value<e.value?1:this.compareBlockOrder(e)}compareBlockOrder(e){const t=this._recipient.compare(e._recipient);if(0!==t)return t;if(this._validityStartHeight<e._validityStartHeight)return-1;if(this._validityStartHeight>e._validityStartHeight)return 1;if(this._fee>e._fee)return-1;if(this._fee<e._fee)return 1;if(this._value>e._value)return-1;if(this._value<e._value)return 1;const r=this._sender.compare(e._sender);return 0!==r?r:this._recipientType<e._recipientType?-1:this._recipientType>e._recipientType?1:this._senderType<e._senderType?-1:this._senderType>e._senderType?1:this._flags<e._flags?-1:this._flags>e._flags?1:BufferUtils.compare(this._data,e._data)}equals(e){return e instanceof Transaction&&this._sender.equals(e._sender)&&this._senderType===e._senderType&&this._recipient.equals(e._recipient)&&this._recipientType===e._recipientType&&this._value===e._value&&this._fee===e._fee&&this._validityStartHeight===e._validityStartHeight&&this._networkId===e._networkId&&this._flags===e._flags&&BufferUtils.equals(this._data,e._data)}toString(){return"Transaction{"+`sender=${this._sender.toBase64()}, `+`recipient=${this._recipient.toBase64()}, `+`value=${this._value}, `+`fee=${this._fee}, `+`validityStartHeight=${this._validityStartHeight}, `+`networkId=${this._networkId}`+"}"}getContractCreationAddress(){const e=Transaction.unserialize(this.serialize());e._recipient=Address.NULL;e._hash=null;return Address.fromHash(e.hash())}get sender(){return this._sender}get senderType(){return this._senderType}get recipient(){return this._recipient}get recipientType(){return this._recipientType}get value(){return this._value}get fee(){return this._fee}get feePerByte(){return this._fee/this.serializedSize}get networkId(){return this._networkId}get validityStartHeight(){return this._validityStartHeight}get flags(){return this._flags}hasFlag(e){return(this._flags&e)>0}get data(){return this._data}get proof(){return this._proof}set proof(e){this._proof=e}}Transaction.Format={BASIC:0,EXTENDED:1};Transaction.Flag={NONE:0,CONTRACT_CREATION:1,ALL:1};Transaction.FORMAT_MAP=new Map;Class.register(Transaction);class SignatureProof{static verifyTransaction(e){try{const r=new SerialBuffer(e.proof),i=SignatureProof.unserialize(r);if(r.readPos!==r.byteLength){Log.w(SignatureProof,"Invalid SignatureProof - overlong");return!1}return i.verify(e.sender,e.serializeContent())}catch(t){Log.w(SignatureProof,`Failed to verify transaction: ${t.message||t}`,t);return!1}}static singleSig(e,t){return new SignatureProof(e,new MerklePath([]),t)}static multiSig(e,t,r){const i=MerklePath.compute(t,e);return new SignatureProof(e,i,r)}constructor(e,t,r){if(!(e instanceof PublicKey))throw new Error("Malformed publickKey");if(!(t instanceof MerklePath))throw new Error("Malformed merklePath");if(r&&!(r instanceof Signature))throw new Error("Malformed signature");this._publicKey=e;this._merklePath=t;this._signature=r}static unserialize(e){const t=PublicKey.unserialize(e),r=MerklePath.unserialize(e),i=Signature.unserialize(e);return new SignatureProof(t,r,i)}serialize(e){e=e||new SerialBuffer(this.serializedSize);this._publicKey.serialize(e);this._merklePath.serialize(e);this._signature&&this._signature.serialize(e);return e}get serializedSize(){return this._publicKey.serializedSize+this._merklePath.serializedSize+(this._signature?this._signature.serializedSize:0)}equals(e){return e instanceof SignatureProof&&this._publicKey.equals(e._publicKey)&&this._merklePath.equals(e._merklePath)&&(this._signature?this._signature.equals(e._signature):this._signature===e._signature)}verify(e,t){if(null!==e&&!this.isSignedBy(e)){Log.w(SignatureProof,"Invalid SignatureProof - signer does not match sender address");return!1}if(!this._signature){Log.w(SignatureProof,"Invalid SignatureProof - signature is missing");return!1}if(!this._signature.verify(this._publicKey,t)){Log.w(SignatureProof,"Invalid SignatureProof - signature is invalid");return!1}return!0}isSignedBy(e){const t=this._merklePath.computeRoot(this._publicKey);return Address.fromHash(t).equals(e)}get publicKey(){return this._publicKey}get merklePath(){return this._merklePath}get signature(){return this._signature}set signature(e){this._signature=e}}Class.register(SignatureProof);class BasicTransaction extends Transaction{constructor(e,t,r,i,n,s,a){if(!(e instanceof PublicKey))throw new Error("Malformed senderPubKey");if(s!==undefined&&!(s instanceof Signature))throw new Error("Malformed signature");const o=SignatureProof.singleSig(e,s);super(Transaction.Format.BASIC,e.toAddress(),Account.Type.BASIC,t,Account.Type.BASIC,r,i,n,Transaction.Flag.NONE,new Uint8Array(0),o.serialize(),a);this._signatureProof=o}static unserialize(e){const t=e.readUint8();Assert.that(t===Transaction.Format.BASIC);const r=PublicKey.unserialize(e),i=Address.unserialize(e),n=e.readUint64(),s=e.readUint64(),a=e.readUint32(),o=e.readUint8(),l=Signature.unserialize(e);return new BasicTransaction(r,i,n,s,a,l,o)}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).writeUint8(Transaction.Format.BASIC);this.senderPubKey.serialize(e);this._recipient.serialize(e);e.writeUint64(this._value);e.writeUint64(this._fee);e.writeUint32(this._validityStartHeight);e.writeUint8(this._networkId);this.signature.serialize(e);return e}get serializedSize(){return 1+this.senderPubKey.serializedSize+this._recipient.serializedSize+8+8+4+1+this.signature.serializedSize}get senderPubKey(){return this._signatureProof.publicKey}get signature(){return this._signatureProof.signature}set signature(e){this._signatureProof.signature=e;this._proof=this._signatureProof.serialize()}}Transaction.FORMAT_MAP.set(Transaction.Format.BASIC,BasicTransaction);Class.register(BasicTransaction);class ExtendedTransaction extends Transaction{constructor(e,t,r,i,n,s,a,o,l,c=new Uint8Array(0),u){super(Transaction.Format.EXTENDED,e,t,r,i,n,s,a,o,l,c,u)}static unserialize(e){const t=e.readUint8();Assert.that(t===Transaction.Format.EXTENDED);const r=e.readUint16(),i=e.read(r),n=Address.unserialize(e),s=e.readUint8(),a=Address.unserialize(e),o=e.readUint8(),l=e.readUint64(),c=e.readUint64(),u=e.readUint32(),h=e.readUint8(),d=e.readUint8(),f=e.readUint16(),g=e.read(f);return new ExtendedTransaction(n,s,a,o,l,c,u,d,i,g,h)}serialize(e){(e=e||new SerialBuffer(this.serializedSize)).writeUint8(Transaction.Format.EXTENDED);this.serializeContent(e);e.writeUint16(this._proof.byteLength);e.write(this._proof);return e}get serializedSize(){return 1+this.serializedContentSize+2+this._proof.byteLength}}Transaction.FORMAT_MAP.set(Transaction.Format.EXTENDED,ExtendedTransaction);Class.register(ExtendedTransaction);class IWorker{static async createProxy(e,t,r){return new(IWorker.Proxy(e))(r,t)}static async startWorkerForProxy(e,t,r){if(IWorker._workersSupported){r||(r=`${Nimiq._path}worker.js`);return IWorker.createProxy(e,t,new Worker(window.URL.createObjectURL(new Blob([`Nimiq = {_path: '${Nimiq._path}'}; importScripts('${r.replace(/'/g,"")}');`]))))}await IWorker._workerImplementation[e.name].init(t);return IWorker._workerImplementation[e.name]}static async startWorkerPoolForProxy(e,t,r,i){return new(IWorker.Pool(e))(t=>IWorker.startWorkerForProxy(e,t,i),t,r).start()}static async stubBaseOnMessage(e){try{if("init"===e.data.command)if(IWorker._workerImplementation[e.data.args[0]]){const t=await IWorker._workerImplementation[e.data.args[0]].init(e.data.args[1]);self.postMessage({status:"OK",result:t,id:e.data.id})}else self.postMessage({status:"error",result:"Unknown worker!",id:e.data.id});else self.postMessage({status:"error",result:"Worker not yet initialized!",id:e.data.id})}catch(t){self.postMessage({status:"error",result:t,id:e.data.id})}}static get _workersSupported(){return"undefined"!=typeof Worker}static get areWorkersAsync(){return IWorker._workersSupported}static get _insideWebWorker(){return"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope}static get _global(){return"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:null}static prepareForWorkerUse(e,t){IWorker._insideWebWorker&&(self.onmessage=IWorker.stubBaseOnMessage);IWorker._workerImplementation=IWorker._workerImplementation||{};IWorker._workerImplementation[e.name]=t}static _loadBrowserScript(e,t){const r=document.getElementsByTagName("head")[0],i=document.createElement("script");i.type="text/javascript";i.src=e;const n=()=>window.setTimeout(t,100);i.onreadystatechange=n;i.onload=n;r.appendChild(i)}static Proxy(e){const t=class extends e{constructor(t,r){super();this._name=r;this._messageId=0;this._worker=t;this._worker.onmessage=this._receive.bind(this);this._waiting=new Map;return this._invoke("init",[e.name,r]).then(()=>this)}_receive(e){const t=this._waiting.get(e.data.id);if(t){this._waiting["delete"](e.data.id);"OK"===e.data.status?t.resolve(e.data.result):"error"===e.data.status&&t.error(e.data.result)}else Log.w(WorkerProxy,"Unknown reply",e)}_invoke(e,t=[]){return new Promise((r,i)=>{const n={command:e,args:t,id:this._messageId++};this._waiting.set(n.id,{resolve:r,error:i});this._worker.postMessage(n)})}destroy(){return this._invoke("destroy")}};for(const r of Object.getOwnPropertyNames(e.prototype))"function"==typeof e.prototype[r]&&"constructor"!==r&&(t.prototype[r]=function(...e){return this._invoke(r,e)});return t}static Stub(e){const t=class extends e{constructor(){super()}_result(e,t,r){self.postMessage({status:t,result:r,id:e.data.id})}_onmessage(e){try{const r=this._invoke(e.data.command,e.data.args);r instanceof Promise?r.then(t=>{this._result(e,"OK",t)}):this._result(e,"OK",r)}catch(t){this._result(e,"error",t.message||t)}}init(e){this._name=e;if(IWorker._insideWebWorker){self.name=e;self.onmessage=(e=>this._onmessage(e))}}_invoke(e,t){return this[e].apply(this,t)}destroy(){IWorker._insideWebWorker&&self.close()}};for(const r of Object.getOwnPropertyNames(e.prototype))"function"==typeof e.prototype[r]&&"constructor"!==r&&(t.prototype[r]=function(){throw`Not implemented in IWorker Stub: ${r}`});return t}static Pool(e){const t=class extends e{constructor(e,t="pool",r=1){super();this._proxyInitializer=e;this._name=t;this._poolSize=r;this._workers=[];this._freeWorkers=[];this._waitingCalls=[]}async start(){await this._updateToSize();return this}get poolSize(){return this._poolSize}set poolSize(e){this._poolSize=e;this._updateToSize()["catch"](Log.w.tag(IWorker))}destroy(){this._poolSize=0;return this._updateToSize()}_invoke(e,t){return IWorker._workersSupported?new Promise((r,i)=>{this._waitingCalls.push({name:e,args:t,resolve:r,error:i});const n=this._freeWorkers.shift();n&&this._step(n)["catch"](Log.w.tag(IWorker))}):this._workers[0][e].apply(this._workers[0],t)}async _step(e){let t=this._waitingCalls.shift();for(;t;){try{t.resolve(await e[t.name].apply(e,t.args))}catch(r){t.error(r)}if(-1===this._workers.indexOf(e)){e.destroy();return}t=this._waitingCalls.shift()}this._freeWorkers.push(e)}async _updateToSize(){if("undefined"==typeof Worker&&this._poolSize>1){Log.d(IWorker,"Pool of size larger than 1 requires WebWorker support.");this._poolSize=1}const e=[];for(;this._workers.length+e.length<this._poolSize;)e.push(this._proxyInitializer(`${this._name}#${this._workers.length+e.length}`));const t=await Promise.all(e);for(const r of t){this._workers.push(r);this._step(r)["catch"](Log.w.tag(IWorker))}for(;this._workers.length>this._poolSize;){const e=this._freeWorkers.shift()||this._workers.pop(),t=this._workers.indexOf(e);if(t>=0){this._workers.splice(t,1);e.destroy()}}return this}};for(const r of Object.getOwnPropertyNames(e.prototype))"function"==typeof e.prototype[r]&&"constructor"!==r&&(t.prototype[r]=function(...e){return this._invoke(r,e)});return t}}IWorker._moduleLoadedCallbacks={};IWorker._workerImplementation={};Class.register(IWorker);class WasmHelper{static async doImportBrowser(){if(!PlatformUtils.isNodeJs())if(WasmHelper._importStarted)Log.e(WasmHelper,"doImportBrowser invoked twice");else{WasmHelper._importStarted=!0;await WasmHelper.importWasmBrowser("worker-wasm.wasm")?await WasmHelper.importScriptBrowser("worker-wasm.js"):await WasmHelper.importScriptBrowser("worker-js.js");WasmHelper._importFinished=!0}}static doImportNodeJs(){PlatformUtils.isNodeJs()&&(WasmHelper.importWasmNodeJs("worker-wasm.wasm")?WasmHelper.importScriptNodeJs("worker-wasm.js"):WasmHelper.importScriptNodeJs("worker-js.js"))}static importWasmBrowser(e,t="Module"){e=WasmHelper._adjustWasmPath(e);if(!WasmHelper._global.WebAssembly){Log.w(WasmHelper,"No support for WebAssembly available.");return Promise.resolve(!1)}return new Promise(r=>{try{const n=new XMLHttpRequest;n.open("GET",e,!0);n.responseType="arraybuffer";n.onload=function(){WasmHelper._global[t]=WasmHelper._global[t]||{};WasmHelper._global[t].wasmBinary=n.response;r(!0)};n.onerror=function(){Log.w(WasmHelper,`Failed to access WebAssembly module ${e}`);r(!1)};n.send(null)}catch(i){Log.w(WasmHelper,`Failed to access WebAssembly module ${e}`);r(!1)}})}static importWasmNodeJs(e,t="Module"){e=WasmHelper._adjustWasmPath(e);if(!WasmHelper._global.WebAssembly){Log.w(WasmHelper,"No support for WebAssembly available.");return!1}const r=require("fs");try{const n=r.readFileSync(e);WasmHelper._global[t]=WasmHelper._global[t]||{};WasmHelper._global[t].wasmBinary=function(e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t[r]=e[r];return t}(n);return!0}catch(i){Log.w(WasmHelper,`Failed to access WebAssembly module ${e}: ${i}`);return!1}}static importScriptBrowser(e,t="Module"){if(t&&WasmHelper._global[t]&&WasmHelper._global[t].asm)return!1;e=WasmHelper._adjustScriptPath(e);const r=WasmHelper._global[t]||{};return new Promise(async(i,n)=>{t&&(r.onRuntimeInitialized=(()=>i(!0)));if("function"==typeof importScripts){await new Promise(r=>{WasmHelper._moduleLoadedCallbacks[t]=r;importScripts(e)});WasmHelper._global[t]=WasmHelper._global[t](r);t||i(!0)}else if("object"==typeof window){await new Promise(r=>{WasmHelper._moduleLoadedCallbacks[t]=r;WasmHelper._loadBrowserScript(e)});WasmHelper._global[t]=WasmHelper._global[t](r);t||i(!0)}else if("function"==typeof require){WasmHelper._global[t]=require(e)(r);t||i(!0)}else n("No way to load scripts.")})}static importScriptNodeJs(e,t="Module"){if(t&&WasmHelper._global[t]&&WasmHelper._global[t].asm)return!1;e=WasmHelper._adjustScriptPath(e);const r=WasmHelper._global[t]||{};if("function"==typeof require){WasmHelper._global[t]=require(e)(r);if(!t)return!0}return!1}static fireModuleLoaded(e="Module"){if("function"==typeof WasmHelper._moduleLoadedCallbacks[e]){WasmHelper._moduleLoadedCallbacks[e]();WasmHelper._moduleLoadedCallbacks[e]=null}}static _loadBrowserScript(e){const t=document.getElementsByTagName("head")[0],r=document.createElement("script");r.type="text/javascript";r.src=e;t.appendChild(r)}static _adjustWasmPath(e){"undefined"!=typeof Nimiq&&Nimiq._path&&(e=`${Nimiq._path}${e}`);"string"==typeof __dirname&&-1===e.indexOf("/")&&(e=`${__dirname}/${e}`);return e}static _adjustScriptPath(e){"undefined"!=typeof Nimiq&&Nimiq._path&&(e=`${Nimiq._path}${e}`);"string"==typeof __dirname&&-1===e.indexOf("/")&&(e=`${__dirname}/${e}`);return e}static get _global(){return"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:null}}WasmHelper._moduleLoadedCallbacks={};Class.register(WasmHelper);class CryptoWorker{static get lib(){return CryptoLib.instance}static async getInstanceAsync(){CryptoWorker._workerAsync||(CryptoWorker._workerAsync=await IWorker.startWorkerPoolForProxy(CryptoWorker,"crypto",4));return CryptoWorker._workerAsync}async computeArgon2d(e){}async computeArgon2dBatch(e){}async kdf(e,t,r){}async blockVerify(e,t,r,i,n){}}CryptoWorker._workerAsync=null;Class.register(CryptoWorker);class CryptoUtils{static computeHmacSha512(e,t){e.length>CryptoUtils.SHA512_BLOCK_SIZE&&(e=new SerialBuffer(Hash.computeSha512(e)));const r=new SerialBuffer(CryptoUtils.SHA512_BLOCK_SIZE),i=new SerialBuffer(CryptoUtils.SHA512_BLOCK_SIZE);for(let s=0;s<CryptoUtils.SHA512_BLOCK_SIZE;++s){const t=e[s]||0;r[s]=54^t;i[s]=92^t}const n=Hash.computeSha512(BufferUtils.concatTypedArrays(r,t));return Hash.computeSha512(BufferUtils.concatTypedArrays(i,n))}static computePBKDF2sha512(e,t,r,i){const n=Hash.SIZE.get(Hash.Algorithm.SHA512);if(i>(Math.pow(2,32)-1)*n)throw new Error("Derived key too long");const s=Math.ceil(i/n),a=i-(s-1)*n,o=new SerialBuffer(i);for(let l=1;l<=s;l++){let i=new SerialBuffer(t.length+4);i.write(t);i.writeUint32(l);const n=i=CryptoUtils.computeHmacSha512(e,i);for(let t=1;t<r;t++){i=CryptoUtils.computeHmacSha512(e,i);for(let e=0;e<n.length;e++)n[e]^=i[e]}l<s?o.write(n):o.write(n.slice(0,a))}return o}static async otpKdf(e,t,r,i){return BufferUtils.xor(e,await(await CryptoWorker.getInstanceAsync()).kdf(t,r,i))}static async encryptOtpKdf(e,t){if(e.length!==CryptoUtils.ENCRYPTION_INPUT_SIZE)throw new Error("Invalid data size for encryption");const r=new Uint8Array(CryptoUtils.ENCRYPTION_SALT_LENGTH);CryptoWorker.lib.getRandomValues(r);const i=new SerialBuffer(CryptoUtils.ENCRYPTION_SIZE);i.writeUint8(2);i.writeUint8(Math.log2(CryptoUtils.ENCRYPTION_KDF_ROUNDS));i.write(await CryptoUtils.otpKdf(e,t,r,CryptoUtils.ENCRYPTION_KDF_ROUNDS));i.write(r);i.write(Hash.computeBlake2b(e).subarray(0,CryptoUtils.ENCRYPTION_CHECKSUM_LENGTH));return i}static async decryptOtpKdf(e,t){const r=e.readUint8();if(1!==r&&2!==r)throw new Error("Unsupported type");const i=e.readUint8();if(i>32)throw new Error("Rounds out-of-bounds");const n=Math.pow(2,i),s=e.read(CryptoUtils.ENCRYPTION_INPUT_SIZE),a=e.read(CryptoUtils.ENCRYPTION_SALT_LENGTH),o=e.read(CryptoUtils.ENCRYPTION_CHECKSUM_LENGTH),l=await CryptoUtils.otpKdf(s,t,a,n);let c;switch(r){case 1:{const e=new PrivateKey(l);c=PublicKey.derive(e).hash();break}case 2:c=Hash.computeBlake2b(l)}if(!BufferUtils.equals(c.subarray(0,CryptoUtils.ENCRYPTION_CHECKSUM_LENGTH),o))throw new Error("Invalid key");return l}}CryptoUtils.SHA512_BLOCK_SIZE=128;CryptoUtils.ENCRYPTION_INPUT_SIZE=32;CryptoUtils.ENCRYPTION_KDF_ROUNDS=256;CryptoUtils.ENCRYPTION_CHECKSUM_LENGTH=4;CryptoUtils.ENCRYPTION_SALT_LENGTH=16;CryptoUtils.ENCRYPTION_SIZE=2+CryptoUtils.ENCRYPTION_INPUT_SIZE+CryptoUtils.ENCRYPTION_SALT_LENGTH+CryptoUtils.ENCRYPTION_CHECKSUM_LENGTH;Class.register(CryptoUtils);class GenesisConfig{static main(){GenesisConfig.init(GenesisConfig.CONFIGS.main)}static test(){GenesisConfig.init(GenesisConfig.CONFIGS.test)}static dev(){GenesisConfig.init(GenesisConfig.CONFIGS.dev)}static bounty(){GenesisConfig.init(GenesisConfig.CONFIGS.bounty)}static init(e){if(GenesisConfig._config)throw new Error("GenesisConfig already initialized");if(!e.NETWORK_ID)throw new Error("Config is missing network id");if(!e.NETWORK_NAME)throw new Error("Config is missing network name");GenesisConfig._config=e}static get NETWORK_ID(){if(!GenesisConfig._config)throw new Error("GenesisConfig not initialized");return GenesisConfig._config.NETWORK_ID}static get NETWORK_NAME(){if(!GenesisConfig._config)throw new Error("GenesisConfig not initialized");return GenesisConfig._config.NETWORK_NAME}}Class.register(GenesisConfig);GenesisConfig.CONFIGS={main:{NETWORK_ID:42,NETWORK_NAME:"main"},test:{NETWORK_ID:1,NETWORK_NAME:"test"},dev:{NETWORK_ID:2,NETWORK_NAME:"dev"},bounty:{NETWORK_ID:3,NETWORK_NAME:"bounty"}};e._loaded=!0;"function"==typeof e._onload&&e._onload()}(Nimiq);
//# sourceMappingURL=web-offline.js.map
